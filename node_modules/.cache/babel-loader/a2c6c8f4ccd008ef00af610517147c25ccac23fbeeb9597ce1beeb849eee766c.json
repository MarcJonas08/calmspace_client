{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\components\\\\ColorGame.js\";\nimport React from 'react';\nimport './ColorGame.css';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tile(props) {\n  let click, classname;\n  classname = \"tile\";\n  if (props.colour !== \"#3b3b3b\") {\n    click = props.onClick;\n    classname += \" pointer\";\n  }\n  if (props.action === 1) classname += \" raise\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-2 col-md-2 col-sm-2 col-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classname,\n      onClick: click,\n      style: {\n        backgroundColor: props.colour\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = Tile;\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      seconds: 10\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({\n      time: timeLeftVar\n    });\n  }\n  startTimer() {\n    if (this.timer === 0 && this.state.seconds > 0 || this.props.restarted) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds\n    });\n\n    // Check if we're at zero.\n    if (seconds === 0) {\n      clearInterval(this.timer);\n      this.props.restart();\n    }\n  }\n  render() {\n    this.startTimer();\n    if (this.props.pause) {\n      clearInterval(this.timer);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [this.state.time.s, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStarted: false,\n      win: false,\n      roundScore: 0,\n      numFlipped: 0,\n      colourToMatch: null,\n      indexOfLast: null,\n      colours: this.randomiseColours(),\n      tileAction: Array(18).fill(0)\n    };\n  }\n  handleClick(colour, index) {\n    this.state.gameStarted = true;\n    this.state.numFlipped++;\n    if (this.state.numFlipped === 2) {\n      if (this.state.colourToMatch === colour && this.state.indexOfLast !== index) {\n        this.state.roundScore++;\n        this.updateColours([index, this.state.indexOfLast], 2);\n      }\n      let newTileAction = this.state.tileAction;\n      newTileAction[this.state.indexOfLast] = 0;\n      newTileAction[index] = 0;\n      this.setState({\n        numFlipped: 0,\n        colourToMatch: null,\n        indexOfLast: null,\n        tileAction: newTileAction\n      });\n    } else if (this.state.numFlipped === 1) {\n      let newTileAction = this.state.tileAction;\n      newTileAction[index] = 1;\n      this.setState({\n        colourToMatch: colour,\n        indexOfLast: index,\n        tileAction: newTileAction\n      });\n    }\n  }\n  updateColours(indexChangeArr, action) {\n    // where action is 0 for normal, 1 for raised, and 2 for dead\n    let newColours = this.state.colours;\n    for (let i = 0; i < indexChangeArr.length; i++) {\n      if (action === 2) {\n        // if dead\n        newColours[indexChangeArr[i]] = \"#3b3b3b\";\n      }\n    }\n    this.setState({\n      colours: newColours\n    });\n  }\n  randomiseColours() {\n    let allColours = ['#b99cff', '#ed9cff', '#ff9ca9', '#ffca9c', '#f8ff9c', '#9cffb0', '#9cfff3', '#9cc4ff', '#9c9cff'];\n    let doubles = [];\n\n    // first populate array\n    let i = 0;\n    while (i < allColours.length) {\n      doubles.push(allColours[i]);\n      doubles.push(allColours[i]);\n      i++;\n    }\n\n    // then randomise it\n    for (let i = 0; i < doubles.length; i++) {\n      // get random index and swap them\n      let randI = Math.floor(Math.random() * doubles.length);\n      let _tmp = doubles[randI];\n      doubles[randI] = doubles[i];\n      doubles[i] = _tmp;\n    }\n    return doubles;\n  }\n  renderTiles() {\n    let res = [];\n    let actionArr = this.state.tileAction;\n    const colours = this.state.colours;\n    colours.map((colour, index) => res.push( /*#__PURE__*/_jsxDEV(Tile, {\n      onClick: () => this.handleClick(colour, index),\n      colour: colour,\n      action: actionArr[index]\n    }, index.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 16\n    }, this)));\n    return res;\n  }\n  restart() {\n    this.setState({\n      gameStarted: false,\n      win: false,\n      roundScore: 0,\n      numFlipped: 0,\n      colourToMatch: null,\n      indexOfLast: null,\n      colours: this.randomiseColours(),\n      tileAction: Array(18).fill(0)\n    });\n  }\n  render() {\n    let score = \"Matches left: \" + (9 - this.state.roundScore);\n    if (this.state.roundScore >= 9) {\n      score = \"You Win!\";\n      this.state.win = true;\n    }\n    let timer = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"10 seconds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this);\n    if (this.state.gameStarted) timer = /*#__PURE__*/_jsxDEV(Timer, {\n      pause: this.state.win,\n      restart: () => this.restart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", this.props.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", score, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), timer, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.renderTiles()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-light\",\n        onClick: () => this.restart(),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction ColorGame() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Game, {\n        title: \"Match the Colours!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ColorGame;\nexport default ColorGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tile\");\n$RefreshReg$(_c2, \"ColorGame\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","Tile","props","click","classname","colour","onClick","action","className","children","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","Timer","Component","constructor","state","time","seconds","timer","startTimer","bind","countDown","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","componentDidMount","timeLeftVar","setState","restarted","setInterval","clearInterval","restart","render","pause","s","Game","gameStarted","win","roundScore","numFlipped","colourToMatch","indexOfLast","colours","randomiseColours","tileAction","Array","fill","handleClick","index","updateColours","newTileAction","indexChangeArr","newColours","i","length","allColours","doubles","push","randI","random","_tmp","renderTiles","res","actionArr","map","toString","score","title","variant","ColorGame","_c2","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/ColorGame.js"],"sourcesContent":["import React from 'react';\nimport './ColorGame.css';\nimport { Button } from 'react-bootstrap';\n\n\nfunction Tile(props) {\n  let click, classname;\n  classname = \"tile\";\n  if(props.colour !== \"#3b3b3b\") {\n    click = props.onClick;\n    classname += \" pointer\";\n  }\n  if(props.action === 1)\n    classname += \" raise\";\n\n  return(\n    <div className=\"col-lg-2 col-md-2 col-sm-2 col-4\">\n      <div className={classname} onClick={click} style={{backgroundColor: props.colour}}>\n      </div>\n    </div>\n  );\n}\n\n\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { time: {}, seconds: 10 };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  secondsToTime(secs){\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\n    this.setState({ time: timeLeftVar });\n  }\n\n  startTimer() {\n    if ((this.timer === 0 && this.state.seconds > 0) || this.props.restarted) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      time: this.secondsToTime(seconds),\n      seconds: seconds,\n    });\n\n    // Check if we're at zero.\n    if (seconds === 0) {\n      clearInterval(this.timer);\n      this.props.restart();\n    }\n  }\n\n  render() {\n    this.startTimer();\n    if(this.props.pause) {\n      clearInterval(this.timer);\n    }\n    return(\n      <div>\n        <p>{this.state.time.s} seconds</p>\n      </div>\n    );\n  }\n}\n\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameStarted: false,\n      win: false,\n      roundScore: 0,\n      numFlipped: 0,\n      colourToMatch: null,\n      indexOfLast: null,\n      colours: this.randomiseColours(),\n      tileAction: Array(18).fill(0),\n    }\n  }\n\n  handleClick(colour, index) {\n    this.state.gameStarted = true;\n    this.state.numFlipped++;\n    if(this.state.numFlipped === 2) {\n      if(this.state.colourToMatch === colour && this.state.indexOfLast !== index) {\n        this.state.roundScore++;\n        this.updateColours([index,this.state.indexOfLast], 2);\n      }\n      let newTileAction = this.state.tileAction;\n      newTileAction[this.state.indexOfLast] = 0;\n      newTileAction[index] = 0;\n      this.setState({\n        numFlipped: 0,\n        colourToMatch: null,\n        indexOfLast: null,\n        tileAction: newTileAction,\n      });\n    }\n    else if(this.state.numFlipped === 1) {\n      let newTileAction = this.state.tileAction;\n      newTileAction[index] = 1;\n      this.setState({\n        colourToMatch: colour,\n        indexOfLast: index,\n        tileAction: newTileAction,\n      });\n    }\n\n  }\n\n  updateColours(indexChangeArr, action) {\n    // where action is 0 for normal, 1 for raised, and 2 for dead\n    let newColours = this.state.colours;\n\n    for(let i = 0; i < indexChangeArr.length; i++) {\n      if(action === 2) {\n        // if dead\n        newColours[indexChangeArr[i]] = \"#3b3b3b\";\n      }\n    }\n\n    this.setState({\n      colours: newColours,\n    });\n  }\n\n  randomiseColours() {\n    let allColours = ['#b99cff','#ed9cff','#ff9ca9','#ffca9c','#f8ff9c',\n    '#9cffb0','#9cfff3','#9cc4ff', '#9c9cff'];\n    let doubles = [];\n\n    // first populate array\n    let i = 0;\n    while(i < allColours.length) {\n      doubles.push(allColours[i]);\n      doubles.push(allColours[i]);\n      i++;\n    }\n\n    // then randomise it\n    for(let i = 0; i < doubles.length; i++) {\n      // get random index and swap them\n      let randI = Math.floor(Math.random()*doubles.length);\n      let _tmp = doubles[randI];\n      doubles[randI] = doubles[i];\n      doubles[i] = _tmp;\n    }\n\n    return doubles;\n  }\n\n  renderTiles() {\n    let res = [];\n\n    let actionArr = this.state.tileAction;\n    const colours = this.state.colours;\n\n    colours.map((colour, index) =>\n      res.push(<Tile\n        key={index.toString()}\n        onClick={() => this.handleClick(colour, index)}\n        colour={colour}\n        action={actionArr[index]}\n        />),\n    );\n\n    return (res);\n  }\n\n\n  restart() {\n    this.setState({\n      gameStarted: false,\n      win: false,\n      roundScore: 0,\n      numFlipped: 0,\n      colourToMatch: null,\n      indexOfLast: null,\n      colours: this.randomiseColours(),\n      tileAction: Array(18).fill(0),\n    });\n  }\n\n\n  render() {\n    let score = \"Matches left: \" + (9-this.state.roundScore);\n    if(this.state.roundScore >= 9) {\n      score = \"You Win!\"\n      this.state.win = true;\n    }\n    let timer = <p>{\"10 seconds\"}</p>;\n    if(this.state.gameStarted)\n      timer = <Timer pause={this.state.win} restart={() => this.restart()}/>\n    return(\n      <div className=\"container\">\n        <h1> {this.props.title} </h1>\n        <h3> {score} </h3>\n        {timer}\n        <div className=\"row\">\n        {\n          this.renderTiles()\n        }\n        </div>\n        <Button variant=\"outline-light\" onClick={() => this.restart()}>Restart</Button>{' '}\n      </div>\n\n    );\n  }\n\n}\n\n\nfunction ColorGame() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Game\n        title={\"Match the Colours!\"}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default ColorGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}