{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\components\\\\breathing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/BreathingExercise.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BreathingExercise = () => {\n  _s();\n  const [breathsLeft, setBreathsLeft] = useState(3);\n  const [isBreathing, setIsBreathing] = useState(false);\n  const numberOfBreathsChangeHandler = e => {\n    setBreathsLeft(parseInt(e.target.value, 10));\n  };\n  const growCircle = () => {\n    const circleProgress = document.querySelector(\".circle-progress\");\n    circleProgress.classList.add(\"circle-grow\");\n    setTimeout(() => {\n      circleProgress.classList.remove(\"circle-grow\");\n    }, 8000);\n  };\n  const breathTextUpdate = () => {\n    setBreathsLeft(prevBreaths => prevBreaths - 1);\n    const breathsText = document.querySelector(\".breaths-text\");\n    breathsText.innerText = breathsLeft;\n    const instructions = document.querySelector(\".instructions\");\n    instructions.innerText = \"Breath in\";\n    setTimeout(() => {\n      instructions.innerText = \"Hold Breath\";\n      setTimeout(() => {\n        instructions.innerText = \"Exhale Breath Slowly\";\n      }, 4000);\n    }, 4000);\n  };\n  const breathingApp = () => {\n    let breathsRemaining = breathsLeft; // Create a local variable to avoid closure issue\n    const breathingAnimation = setInterval(() => {\n      if (breathsRemaining === 0) {\n        clearInterval(breathingAnimation);\n        const instructions = document.querySelector(\".instructions\");\n        instructions.innerText = \"Breathing session completed. Click 'Begin' to start another session!\";\n        setIsBreathing(false);\n        setBreathsLeft(parseInt(document.querySelector(\".breath-input\").value, 10));\n        return;\n      }\n      growCircle();\n      breathTextUpdate();\n      breathsRemaining--;\n    }, 12000);\n  };\n  const startBreathingHandler = () => {\n    setIsBreathing(true);\n    const instructions = document.querySelector(\".instructions\");\n    instructions.innerText = \"Get relaxed, and ready to begin breathing\";\n    setTimeout(() => {\n      instructions.innerText = \"Breathing is about to begin...\";\n      setTimeout(() => {\n        breathingApp();\n        growCircle();\n        breathTextUpdate();\n      }, 2000);\n    }, 2000);\n  };\n  useEffect(() => {\n    if (isBreathing) {\n      breathingApp();\n    }\n  }, [isBreathing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Breaths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"breath-input\",\n        onChange: numberOfBreathsChangeHandler,\n        value: breathsLeft,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3 Breaths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5 Breaths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7\",\n          children: \"7 Breaths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"breaths\",\n      children: [\"Breaths remaining: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"breaths-text\",\n        children: breathsLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Are you ready to start breathing?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `start ${isBreathing ? \"button-inactive\" : \"\"}`,\n      onClick: startBreathingHandler,\n      children: \"Begin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(BreathingExercise, \"wO3gWtlwUEjEAqzWieqEwPZxhgg=\");\n_c = BreathingExercise;\nexport default BreathingExercise;\nvar _c;\n$RefreshReg$(_c, \"BreathingExercise\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BreathingExercise","_s","breathsLeft","setBreathsLeft","isBreathing","setIsBreathing","numberOfBreathsChangeHandler","e","parseInt","target","value","growCircle","circleProgress","document","querySelector","classList","add","setTimeout","remove","breathTextUpdate","prevBreaths","breathsText","innerText","instructions","breathingApp","breathsRemaining","breathingAnimation","setInterval","clearInterval","startBreathingHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/breathing.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/BreathingExercise.css\";\r\n\r\nconst BreathingExercise = () => {\r\n  const [breathsLeft, setBreathsLeft] = useState(3);\r\n  const [isBreathing, setIsBreathing] = useState(false);\r\n\r\n  const numberOfBreathsChangeHandler = (e) => {\r\n    setBreathsLeft(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  const growCircle = () => {\r\n    const circleProgress = document.querySelector(\".circle-progress\");\r\n    circleProgress.classList.add(\"circle-grow\");\r\n    setTimeout(() => {\r\n      circleProgress.classList.remove(\"circle-grow\");\r\n    }, 8000);\r\n  };\r\n\r\n  const breathTextUpdate = () => {\r\n    setBreathsLeft((prevBreaths) => prevBreaths - 1);\r\n    const breathsText = document.querySelector(\".breaths-text\");\r\n    breathsText.innerText = breathsLeft;\r\n    const instructions = document.querySelector(\".instructions\");\r\n    instructions.innerText = \"Breath in\";\r\n    setTimeout(() => {\r\n      instructions.innerText = \"Hold Breath\";\r\n      setTimeout(() => {\r\n        instructions.innerText = \"Exhale Breath Slowly\";\r\n      }, 4000);\r\n    }, 4000);\r\n  };\r\n\r\n  const breathingApp = () => {\r\n    let breathsRemaining = breathsLeft; // Create a local variable to avoid closure issue\r\n    const breathingAnimation = setInterval(() => {\r\n      if (breathsRemaining === 0) {\r\n        clearInterval(breathingAnimation);\r\n        const instructions = document.querySelector(\".instructions\");\r\n        instructions.innerText =\r\n          \"Breathing session completed. Click 'Begin' to start another session!\";\r\n        setIsBreathing(false);\r\n        setBreathsLeft(parseInt(document.querySelector(\".breath-input\").value, 10));\r\n        return;\r\n      }\r\n      growCircle();\r\n      breathTextUpdate();\r\n      breathsRemaining--;\r\n    }, 12000);\r\n  };\r\n\r\n  const startBreathingHandler = () => {\r\n    setIsBreathing(true);\r\n    const instructions = document.querySelector(\".instructions\");\r\n    instructions.innerText = \"Get relaxed, and ready to begin breathing\";\r\n    setTimeout(() => {\r\n      instructions.innerText = \"Breathing is about to begin...\";\r\n      setTimeout(() => {\r\n        breathingApp();\r\n        growCircle();\r\n        breathTextUpdate();\r\n      }, 2000);\r\n    }, 2000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isBreathing) {\r\n      breathingApp();\r\n    }\r\n  }, [isBreathing]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"input\">\r\n        <label>Select Breaths</label>\r\n        <select className=\"breath-input\" onChange={numberOfBreathsChangeHandler} value={breathsLeft}>\r\n          <option value=\"3\">3 Breaths</option>\r\n          <option value=\"5\">5 Breaths</option>\r\n          <option value=\"7\">7 Breaths</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"circle-wrap\">\r\n        <div className=\"circle-outline\"></div>\r\n        <div className=\"circle-progress\"></div>\r\n      </div>\r\n      <p className=\"breaths\">\r\n        Breaths remaining: <span className=\"breaths-text\">{breathsLeft}</span>\r\n      </p>\r\n      <p className=\"instructions\">Are you ready to start breathing?</p>\r\n      <button className={`start ${isBreathing ? \"button-inactive\" : \"\"}`} onClick={startBreathingHandler}>\r\n        Begin\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BreathingExercise;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}