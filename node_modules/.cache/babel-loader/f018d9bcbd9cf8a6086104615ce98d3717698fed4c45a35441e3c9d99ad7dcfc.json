{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\n  const [redirectToAssessment, setRedirectToAssessment] = useState(false);\n  const loginUser = async event => {\n    event.preventDefault();\n    const response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': event.target.username.value,\n        'password': event.target.password.value\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/');\n      console.log('USER: ', authTokens);\n    } else {\n      alert(\"Invalid username or password\");\n    }\n  };\n  let handleLogout = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    navigate('/login');\n  };\n  let updateToken = async () => {\n    console.log('gags');\n    const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens.refresh\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      handleLogout();\n    }\n  };\n  const [Loading, setLoading] = useState(true);\n  useEffect(() => {\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, Loading]);\n  let contextData = {\n    user: user,\n    loginUser: loginUser,\n    setUser: setUser,\n    setAuthTokens: setAuthTokens,\n    handleLogout: handleLogout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"8nyLgDaVwAky1xlIcjy6A7wNaWo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","Navigate","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","navigate","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","redirectToAssessment","setRedirectToAssessment","loginUser","event","preventDefault","response","fetch","method","headers","body","stringify","target","username","value","password","data","json","status","access","setItem","console","log","alert","handleLogout","removeItem","updateToken","refresh","Loading","setLoading","fourMinutes","interval","setInterval","clearInterval","contextData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\r\n    const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\r\n    const [redirectToAssessment, setRedirectToAssessment] = useState(false);\r\n\r\n    const loginUser = async (event) => {\r\n        event.preventDefault();\r\n\r\n            const response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({'username': event.target.username.value, 'password': event.target.password.value}),\r\n            })\r\n\r\n            const data = await response.json();\r\n            \r\n            if(response.status === 200){\r\n                setAuthTokens(data)\r\n                setUser(jwtDecode(data.access))\r\n                localStorage.setItem('authTokens', JSON.stringify(data))\r\n\r\n                navigate('/');\r\n                console.log('USER: ', authTokens)\r\n\r\n            } else {\r\n                alert(\"Invalid username or password\")\r\n            }\r\n\r\n            \r\n    }\r\n\r\n    let handleLogout = () => {\r\n        setAuthTokens(null);\r\n        setUser(null);\r\n        localStorage.removeItem('authTokens');\r\n\r\n        navigate('/login');\r\n    }\r\n\r\n\r\n    let updateToken = async () => {\r\n        console.log('gags');\r\n        const response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({'refresh': authTokens.refresh}),\r\n            })\r\n\r\n            const data = await response.json();\r\n            \r\n            if(response.status === 200){\r\n                setAuthTokens(data)\r\n                setUser(jwtDecode(data.access))\r\n                localStorage.setItem('authTokens', JSON.stringify(data))\r\n            } else {\r\n                handleLogout();\r\n            }\r\n    }\r\n\r\n    const [Loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let fourMinutes = 1000 * 60 * 4;\r\n        let interval = setInterval(() => {\r\n            if (authTokens){\r\n                updateToken();\r\n            }\r\n        }, fourMinutes)\r\n\r\n        return () => clearInterval(interval);\r\n\r\n    }, [authTokens, Loading]);\r\n\r\n    let contextData = {\r\n        \r\n        user:user,\r\n        loginUser:loginUser,\r\n        setUser:setUser,\r\n        setAuthTokens:setAuthTokens,\r\n        handleLogout:handleLogout\r\n    };\r\n\r\n\r\n    return(\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,eAAeQ,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAExC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,MAAMc,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EAC9I,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,MAAMc,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGb,SAAS,CAACY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EACjI,MAAM,CAACK,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEvE,MAAMsB,SAAS,GAAG,MAAOC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEb,IAAI,CAACc,SAAS,CAAC;QAAC,UAAU,EAAEP,KAAK,CAACQ,MAAM,CAACC,QAAQ,CAACC,KAAK;QAAE,UAAU,EAAEV,KAAK,CAACQ,MAAM,CAACG,QAAQ,CAACD;MAAK,CAAC;IAC3G,CAAC,CAAC;IAEF,MAAME,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAElC,IAAGX,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAC;MACvBxB,aAAa,CAACsB,IAAI,CAAC;MACnBhB,OAAO,CAACjB,SAAS,CAACiC,IAAI,CAACG,MAAM,CAAC,CAAC;MAC/BxB,YAAY,CAACyB,OAAO,CAAC,YAAY,EAAEvB,IAAI,CAACc,SAAS,CAACK,IAAI,CAAC,CAAC;MAExDxB,QAAQ,CAAC,GAAG,CAAC;MACb6B,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE7B,UAAU,CAAC;IAErC,CAAC,MAAM;MACH8B,KAAK,CAAC,8BAA8B,CAAC;IACzC;EAGR,CAAC;EAED,IAAIC,YAAY,GAAGA,CAAA,KAAM;IACrB9B,aAAa,CAAC,IAAI,CAAC;IACnBM,OAAO,CAAC,IAAI,CAAC;IACbL,YAAY,CAAC8B,UAAU,CAAC,YAAY,CAAC;IAErCjC,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAGD,IAAIkC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC1BL,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEb,IAAI,CAACc,SAAS,CAAC;QAAC,SAAS,EAAElB,UAAU,CAACkC;MAAO,CAAC;IACxD,CAAC,CAAC;IAEF,MAAMX,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAElC,IAAGX,QAAQ,CAACY,MAAM,KAAK,GAAG,EAAC;MACvBxB,aAAa,CAACsB,IAAI,CAAC;MACnBhB,OAAO,CAACjB,SAAS,CAACiC,IAAI,CAACG,MAAM,CAAC,CAAC;MAC/BxB,YAAY,CAACyB,OAAO,CAAC,YAAY,EAAEvB,IAAI,CAACc,SAAS,CAACK,IAAI,CAAC,CAAC;IAC5D,CAAC,MAAM;MACHQ,YAAY,CAAC,CAAC;IAClB;EACR,CAAC;EAED,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,IAAIgD,WAAW,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC;IAC/B,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC7B,IAAIvC,UAAU,EAAC;QACXiC,WAAW,CAAC,CAAC;MACjB;IACJ,CAAC,EAAEI,WAAW,CAAC;IAEf,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EAExC,CAAC,EAAE,CAACtC,UAAU,EAAEmC,OAAO,CAAC,CAAC;EAEzB,IAAIM,WAAW,GAAG;IAEdnC,IAAI,EAACA,IAAI;IACTI,SAAS,EAACA,SAAS;IACnBH,OAAO,EAACA,OAAO;IACfN,aAAa,EAACA,aAAa;IAC3B8B,YAAY,EAACA;EACjB,CAAC;EAGD,oBACIrC,OAAA,CAACC,WAAW,CAAC+C,QAAQ;IAACrB,KAAK,EAAEoB,WAAY;IAAA5C,QAAA,EACpCA;EAAQ;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAhD,EAAA,CA/FYF,YAAY;EAAA,QAEJJ,WAAW;AAAA;AAAAuD,EAAA,GAFnBnD,YAAY;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}