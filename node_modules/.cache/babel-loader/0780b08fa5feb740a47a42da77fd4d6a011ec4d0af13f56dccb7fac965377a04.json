{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\components\\\\wordle_component\\\\Letter.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../wordle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Letter({\n  letterPos,\n  attemptVal\n}) {\n  _s();\n  const {\n    board,\n    setDisabledLetters,\n    currAttempt,\n    correctWord\n  } = useContext(AppContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost = !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter);\n  const letterState = currAttempt.attempt > attemptVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) {\n      console.log(letter);\n      setDisabledLetters(prev => [...prev, letter]);\n    }\n  }, [currAttempt.attempt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter\",\n    id: letterState,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Letter, \"KZCcoPvGVPqnR/ayGxWMRxaXc/U=\");\n_c = Letter;\nexport default Letter;\nvar _c;\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","useEffect","AppContext","jsxDEV","_jsxDEV","Letter","letterPos","attemptVal","_s","board","setDisabledLetters","currAttempt","correctWord","letter","correct","toUpperCase","almost","includes","letterState","attempt","console","log","prev","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/wordle_component/Letter.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../wordle\";\r\n\r\nfunction Letter({ letterPos, attemptVal }) {\r\n  const { board, setDisabledLetters, currAttempt, correctWord } =\r\n    useContext(AppContext);\r\n  const letter = board[attemptVal][letterPos];\r\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\r\n  const almost =\r\n    !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter);\r\n  const letterState =\r\n    currAttempt.attempt > attemptVal &&\r\n    (correct ? \"correct\" : almost ? \"almost\" : \"error\");\r\n\r\n  useEffect(() => {\r\n    if (letter !== \"\" && !correct && !almost) {\r\n      console.log(letter);\r\n      setDisabledLetters((prev) => [...prev, letter]);\r\n    }\r\n  }, [currAttempt.attempt]);\r\n  return (\r\n    <div className=\"letter\" id={letterState}>\r\n      {letter}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Letter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,MAAMA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM;IAAEC,KAAK;IAAEC,kBAAkB;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAC3DZ,UAAU,CAACE,UAAU,CAAC;EACxB,MAAMW,MAAM,GAAGJ,KAAK,CAACF,UAAU,CAAC,CAACD,SAAS,CAAC;EAC3C,MAAMQ,OAAO,GAAGF,WAAW,CAACG,WAAW,CAAC,CAAC,CAACT,SAAS,CAAC,KAAKO,MAAM;EAC/D,MAAMG,MAAM,GACV,CAACF,OAAO,IAAID,MAAM,KAAK,EAAE,IAAID,WAAW,CAACG,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACJ,MAAM,CAAC;EACzE,MAAMK,WAAW,GACfP,WAAW,CAACQ,OAAO,GAAGZ,UAAU,KAC/BO,OAAO,GAAG,SAAS,GAAGE,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;EAErDf,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,KAAK,EAAE,IAAI,CAACC,OAAO,IAAI,CAACE,MAAM,EAAE;MACxCI,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;MACnBH,kBAAkB,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAET,MAAM,CAAC,CAAC;IACjD;EACF,CAAC,EAAE,CAACF,WAAW,CAACQ,OAAO,CAAC,CAAC;EACzB,oBACEf,OAAA;IAAKmB,SAAS,EAAC,QAAQ;IAACC,EAAE,EAAEN,WAAY;IAAAO,QAAA,EACrCZ;EAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACrB,EAAA,CAtBQH,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAwBf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}