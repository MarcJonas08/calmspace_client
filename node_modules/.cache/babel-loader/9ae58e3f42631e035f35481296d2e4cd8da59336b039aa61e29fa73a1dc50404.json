{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\components\\\\wordle.js\",\n  _s = $RefreshSig$();\nimport \"../css/wordle.css\";\nimport Board from \"./wordle_component/Board\";\nimport Keyboard from \"./wordle_component/Keyboard\";\nimport { boardDefault, generateWordSet } from \"./words\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport GameOver from \"./wordle_component/GameOver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction Wordle() {\n  _s();\n  const [board, setBoard] = useState(boardDefault);\n  const [currAttempt, setCurrAttempt] = useState({\n    attempt: 0,\n    letter: 0\n  });\n  const [wordSet, setWordSet] = useState(new Set());\n  const [correctWord, setCorrectWord] = useState(\"\");\n  const [disabledLetters, setDisabledLetters] = useState([]);\n  const [gameOver, setGameOver] = useState({\n    gameOver: false,\n    guessedWord: false\n  });\n  useEffect(() => {\n    generateWordSet().then(words => {\n      setWordSet(words.wordSet);\n      setCorrectWord(words.todaysWord);\n    });\n  }, []);\n  const onEnter = () => {\n    if (currAttempt.letter !== 5) return;\n    let currWord = \"\";\n    for (let i = 0; i < 5; i++) {\n      currWord += board[currAttempt.attempt][i];\n    }\n    if (wordSet.has(currWord.toLowerCase())) {\n      setCurrAttempt({\n        attempt: currAttempt.attempt + 1,\n        letter: 0\n      });\n    } else {\n      alert(\"Word not found\");\n    }\n    if (currWord === correctWord) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: true\n      });\n      return;\n    }\n    console.log(currAttempt);\n    if (currAttempt.attempt === 5) {\n      setGameOver({\n        gameOver: true,\n        guessedWord: false\n      });\n      return;\n    }\n  };\n  const onDelete = () => {\n    if (currAttempt.letter === 0) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\n    setBoard(newBoard);\n    setCurrAttempt({\n      ...currAttempt,\n      letter: currAttempt.letter - 1\n    });\n  };\n  const onSelectLetter = key => {\n    if (currAttempt.letter > 4) return;\n    const newBoard = [...board];\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\n    setBoard(newBoard);\n    setCurrAttempt({\n      attempt: currAttempt.attempt,\n      letter: currAttempt.letter + 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Wordle\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        board,\n        setBoard,\n        currAttempt,\n        setCurrAttempt,\n        correctWord,\n        onSelectLetter,\n        onDelete,\n        onEnter,\n        setDisabledLetters,\n        disabledLetters,\n        gameOver\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), gameOver.gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(Keyboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Wordle, \"3wUeprhFvMMpLqArtoZpg2m8rCo=\");\n_c = Wordle;\nexport default Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["Board","Keyboard","boardDefault","generateWordSet","React","useState","createContext","useEffect","GameOver","jsxDEV","_jsxDEV","AppContext","Wordle","_s","board","setBoard","currAttempt","setCurrAttempt","attempt","letter","wordSet","setWordSet","Set","correctWord","setCorrectWord","disabledLetters","setDisabledLetters","gameOver","setGameOver","guessedWord","then","words","todaysWord","onEnter","currWord","i","has","toLowerCase","alert","console","log","onDelete","newBoard","onSelectLetter","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/wordle.js"],"sourcesContent":["import \"../css/wordle.css\";\r\nimport Board from \"./wordle_component/Board\";\r\nimport Keyboard from \"./wordle_component/Keyboard\";\r\nimport { boardDefault, generateWordSet } from \"./words\";\r\nimport React, { useState, createContext, useEffect } from \"react\";\r\nimport GameOver from \"./wordle_component/GameOver\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nfunction Wordle() {\r\n  const [board, setBoard] = useState(boardDefault);\r\n  const [currAttempt, setCurrAttempt] = useState({ attempt: 0, letter: 0 });\r\n  const [wordSet, setWordSet] = useState(new Set());\r\n  const [correctWord, setCorrectWord] = useState(\"\");\r\n  const [disabledLetters, setDisabledLetters] = useState([]);\r\n  const [gameOver, setGameOver] = useState({\r\n    gameOver: false,\r\n    guessedWord: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    generateWordSet().then((words) => {\r\n      setWordSet(words.wordSet);\r\n      setCorrectWord(words.todaysWord);\r\n    });\r\n  }, []);\r\n\r\n  const onEnter = () => {\r\n    if (currAttempt.letter !== 5) return;\r\n\r\n    let currWord = \"\";\r\n    for (let i = 0; i < 5; i++) {\r\n      currWord += board[currAttempt.attempt][i];\r\n    }\r\n    if (wordSet.has(currWord.toLowerCase())) {\r\n      setCurrAttempt({ attempt: currAttempt.attempt + 1, letter: 0 });\r\n    } else {\r\n      alert(\"Word not found\");\r\n    }\r\n\r\n    if (currWord === correctWord) {\r\n      setGameOver({ gameOver: true, guessedWord: true });\r\n      return;\r\n    }\r\n    console.log(currAttempt);\r\n    if (currAttempt.attempt === 5) {\r\n      setGameOver({ gameOver: true, guessedWord: false });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onDelete = () => {\r\n    if (currAttempt.letter === 0) return;\r\n    const newBoard = [...board];\r\n    newBoard[currAttempt.attempt][currAttempt.letter - 1] = \"\";\r\n    setBoard(newBoard);\r\n    setCurrAttempt({ ...currAttempt, letter: currAttempt.letter - 1 });\r\n  };\r\n\r\n  const onSelectLetter = (key) => {\r\n    if (currAttempt.letter > 4) return;\r\n    const newBoard = [...board];\r\n    newBoard[currAttempt.attempt][currAttempt.letter] = key;\r\n    setBoard(newBoard);\r\n    setCurrAttempt({\r\n      attempt: currAttempt.attempt,\r\n      letter: currAttempt.letter + 1,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Wordle\">\r\n      <nav>\r\n        <h1>Wordle</h1>\r\n      </nav>\r\n      <AppContext.Provider\r\n        value={{\r\n          board,\r\n          setBoard,\r\n          currAttempt,\r\n          setCurrAttempt,\r\n          correctWord,\r\n          onSelectLetter,\r\n          onDelete,\r\n          onEnter,\r\n          setDisabledLetters,\r\n          disabledLetters,\r\n          gameOver,\r\n        }}\r\n      >\r\n        <div className=\"game\">\r\n          <Board />\r\n          {gameOver.gameOver ? <GameOver /> : <Keyboard />}\r\n        </div>\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wordle;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}