{"ast":null,"code":"import React from\"react\";import\"./GameBoard.css\";import*as Constants from\"./Constants\";import GameEnd from\"./GameEnd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";class GameBoard extends React.Component{constructor(props){super(props);this.state={mainLevel:0,subLevel:0,wrongCount:0,word:\"\",scrambledWord:\"\",clue:\"\",gameState:\"initial\",wordCategory:\"\",score:0,seconds:0,gameMode:\"\"};this.userInput=\"\";this.randomNumber=0;this.decrementer=0;this.levelUp=false;this.level=0;this.didWin=false;this.timer=this.timer.bind(this);this.startGame=this.startGame.bind(this);this.selectMode=this.selectMode.bind(this);this.fetchWord=this.fetchWord.bind(this);this.checkWord=this.checkWord.bind(this);this.stopGame=this.stopGame.bind(this);this.handleKeyDown=this.handleKeyDown.bind(this);}componentDidMount(){document.addEventListener(\"keydown\",this.handleKeyDown);}componentWillUnmount(){document.removeEventListener(\"keydown\",this.handleKeyDown);}handleKeyDown(e){if(e.keyCode===13){if(this.userInput!==\"\"&&this.state.word!==\"\"){this.checkWord();}}}startGame(){this.userInput.value=\"\";this.userInput=\"\";this.randomNumber=0;this.decrementer=0;this.levelUp=false;this.level=0;this.didWin=false;this.setState({mainLevel:0,subLevel:0,wrongCount:0,word:\"\",scrambledWord:\"\",clue:\"\",gameState:\"running\",wordCategory:\"\",score:0,seconds:0,gameMode:\"\"});}selectMode(e){let mode=\"\";if(e.target.textContent===\"Easy\"){mode=\"Easy\";}else if(e.target.textContent===\"Hard\"){mode=\"Hard\";}this.level=1;this.setState({mainLevel:1,subLevel:1,wrongCount:0,gameState:\"running\",wordCategory:Constants.LEVEL_1,score:0,seconds:1500,gameMode:mode});setTimeout(()=>{this.fetchWord();},1000);}fetchWord(){let num=Math.floor(Math.random()*this.state.wordCategory.length);this.randomNumber=num;let{actual,scrambled,clue}=this.state.wordCategory[num];this.setState({word:actual,scrambledWord:scrambled,clue:\"Clue: \"+clue});if(this.state.gameMode===\"Hard\"){this.timerID=setInterval(this.timer,100);}else{clearInterval(this.timerID);}}checkWord(){let userInput=this.userInput.value.toLowerCase();if(this.state.word===userInput){this.userInput.value=\"\";this.misses=0;this.state.wordCategory.splice(this.randomNumber,1);if(this.state.subLevel%25===0){this.levelUp=true;this.level+=1;}else{this.levelUp=false;}this.setState(prevState=>{return{score:prevState.score+1,wrongCount:0,mainLevel:this.levelUp===true?prevState.mainLevel+1:prevState.mainLevel,wordCategory:this.levelUp===true?Constants.getWords(this.level):prevState.wordCategory,subLevel:this.levelUp===true?1:prevState.subLevel+1,seconds:1500};});setTimeout(()=>{if(this.state.score===Constants.MaxScore){this.didWin=true;this.stopGame();}else{this.fetchWord();}},100);}else{this.setState(prevState=>{return{score:prevState.score,wrongCount:prevState.wrongCount===Constants.WrongCount?prevState.wrongCount:prevState.wrongCount+1};});setTimeout(()=>{if(this.state.wrongCount===Constants.WrongCount){this.didWin=false;this.stopGame();}},1000);}}stopGame(){clearInterval(this.timerID);this.setState(prevState=>{return{gameState:\"end\",score:prevState.score,mainLevel:0,subLevel:0,wrongCount:0,seconds:prevState.seconds};});}timer(){if(this.state.gameMode===\"Hard\"){if(this.state.gameState===\"running\"){this.decrementer=1;}this.setState(prevState=>{return{seconds:prevState.seconds===0?0:prevState.seconds-this.decrementer};});if(this.state.seconds===0){this.stopGame();}}}render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{id:\"description\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"This is a fun game that tests your knowledge in deciphering the correct word from its scrambled form. A collection of 250 words spread over 10 levels awaits you. Choose your level - easy, if your are just starting out and don't want a timer to distract you\",\" \",/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:\"bold\"},children:\"OR\"}),\" hard, if you want to be adventurous and compete within the limits of a fixed timer. Start this word quest and Unscramble!\"]})}),/*#__PURE__*/_jsxs(\"div\",{style:(this.state.gameState===\"running\"||this.state.gameState!==\"\")&&this.state.gameState!==\"end\"?{display:\"block\",maxWidth:\"900px\",margin:\"40px auto\"}:this.state.gameState===\"end\"?{display:\"block\",opacity:0.3}:{display:\"none\"},children:[/*#__PURE__*/_jsxs(\"div\",{id:\"level-header-container\",children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:\"center\",color:\"#644566\",background:\"linear-gradient(to bottom, #dbeceb 0, #dbeceb 60%, #fedc2a 60%, #fedc2a 80%, #dbeceb 60%, #dbeceb 100%)\",margin:\"0 5px\"},children:\"Select a level.\"}),/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"slateboard-emoji\",children:\"\\uD83D\\uDCCB\"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"level-container\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"easy\",className:\"level\",style:this.state.gameMode!==\"\"&&this.state.gameMode===\"Easy\"?{background:\"#af5790\"}:null,onClick:e=>{this.selectMode(e);},children:/*#__PURE__*/_jsx(\"label\",{children:\"Easy\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"hard\",className:\"level\",style:this.state.gameMode!==\"\"&&this.state.gameMode===\"Hard\"?{background:\"#af5790\"}:null,onClick:e=>{this.selectMode(e);},children:/*#__PURE__*/_jsx(\"label\",{children:\"Hard\"})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"game-control-container\",children:[/*#__PURE__*/_jsxs(\"span\",{role:\"img\",\"aria-label\":\"pen-emoji\",children:[\"\\u2712\\uFE0F Level:\",\" \".concat(this.state.mainLevel,\" - \").concat(this.state.subLevel)]}),/*#__PURE__*/_jsxs(\"span\",{role:\"img\",\"aria-label\":\"dartboard-emoji\",children:[\"\\uD83C\\uDFAF Score:\",\" \".concat(this.state.score)]}),/*#__PURE__*/_jsxs(\"span\",{role:\"img\",\"aria-label\":\"cross-emoji\",children:[\"\\u274C Wrong:\",\" \".concat(this.state.wrongCount,\"/5\")]}),/*#__PURE__*/_jsxs(\"span\",{role:\"img\",\"aria-label\":\"sandclock-emoji\",children:[\"\\u231B\\uFE0F Seconds:\",\" \".concat(this.state.seconds)]})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"scrambled-word-container\",children:[/*#__PURE__*/_jsx(\"p\",{id:\"scrambled-word\",children:this.state.scrambledWord}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"#90490a\"},children:\"\".concat(this.state.clue)})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"input-container\",className:\"input-field\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"floating-label\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"input-data\",className:\"floating-input\",type:\"text\",placeholder:\" \",ref:ref=>this.userInput=ref}),/*#__PURE__*/_jsx(\"span\",{className:\"highlight\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"input-data\",children:\"Enter answers here...\"})]}),/*#__PURE__*/_jsx(\"button\",{id:\"answer\",className:\"btn\",onClick:this.checkWord,children:/*#__PURE__*/_jsx(\"span\",{children:\"Submit\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{style:this.state.gameState===\"end\"&&this.state.gameState!==\"\"&&this.state.gameState!==\"running\"?{display:\"block\"}:{display:\"none\"},children:/*#__PURE__*/_jsx(GameEnd,{didWin:this.didWin,gameMode:this.state.gameMode,timeLeft:this.state.seconds,startGame:this.startGame})})]});}}export default GameBoard;","map":{"version":3,"names":["React","Constants","GameEnd","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GameBoard","Component","constructor","props","state","mainLevel","subLevel","wrongCount","word","scrambledWord","clue","gameState","wordCategory","score","seconds","gameMode","userInput","randomNumber","decrementer","levelUp","level","didWin","timer","bind","startGame","selectMode","fetchWord","checkWord","stopGame","handleKeyDown","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","keyCode","value","setState","mode","target","textContent","LEVEL_1","setTimeout","num","Math","floor","random","length","actual","scrambled","timerID","setInterval","clearInterval","toLowerCase","misses","splice","prevState","getWords","MaxScore","WrongCount","render","children","id","style","fontWeight","display","maxWidth","margin","opacity","textAlign","color","background","role","className","onClick","concat","type","placeholder","ref","htmlFor","timeLeft"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/Unscramble/GameBoard.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./GameBoard.css\";\r\n\r\nimport * as Constants from \"./Constants\";\r\nimport GameEnd from \"./GameEnd\";\r\n\r\nclass GameBoard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mainLevel: 0,\r\n      subLevel: 0,\r\n      wrongCount: 0,\r\n      word: \"\",\r\n      scrambledWord: \"\",\r\n      clue: \"\",\r\n      gameState: \"initial\",\r\n      wordCategory: \"\",\r\n      score: 0,\r\n      seconds: 0,\r\n      gameMode: \"\",\r\n    };\r\n\r\n    this.userInput = \"\";\r\n    this.randomNumber = 0;\r\n    this.decrementer = 0;\r\n    this.levelUp = false;\r\n    this.level = 0;\r\n    this.didWin = false;\r\n    this.timer = this.timer.bind(this);\r\n\r\n    this.startGame = this.startGame.bind(this);\r\n    this.selectMode = this.selectMode.bind(this);\r\n    this.fetchWord = this.fetchWord.bind(this);\r\n    this.checkWord = this.checkWord.bind(this);\r\n    this.stopGame = this.stopGame.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.keyCode === 13) {\r\n      if (this.userInput !== \"\" && this.state.word !== \"\") {\r\n        this.checkWord();\r\n      }\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.userInput.value = \"\";\r\n    this.userInput = \"\";\r\n    this.randomNumber = 0;\r\n    this.decrementer = 0;\r\n    this.levelUp = false;\r\n    this.level = 0;\r\n    this.didWin = false;\r\n\r\n    this.setState({\r\n      mainLevel: 0,\r\n      subLevel: 0,\r\n      wrongCount: 0,\r\n      word: \"\",\r\n      scrambledWord: \"\",\r\n      clue: \"\",\r\n      gameState: \"running\",\r\n      wordCategory: \"\",\r\n      score: 0,\r\n      seconds: 0,\r\n      gameMode: \"\",\r\n    });\r\n  }\r\n\r\n  selectMode(e) {\r\n    let mode = \"\";\r\n    if (e.target.textContent === \"Easy\") {\r\n      mode = \"Easy\";\r\n    } else if (e.target.textContent === \"Hard\") {\r\n      mode = \"Hard\";\r\n    }\r\n\r\n    this.level = 1;\r\n    this.setState({\r\n      mainLevel: 1,\r\n      subLevel: 1,\r\n      wrongCount: 0,\r\n      gameState: \"running\",\r\n      wordCategory: Constants.LEVEL_1,\r\n      score: 0,\r\n      seconds: 1500,\r\n      gameMode: mode,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.fetchWord();\r\n    }, 1000);\r\n  }\r\n\r\n  fetchWord() {\r\n    let num = Math.floor(Math.random() * this.state.wordCategory.length);\r\n    this.randomNumber = num;\r\n    let { actual, scrambled, clue } = this.state.wordCategory[num];\r\n    this.setState({\r\n      word: actual,\r\n      scrambledWord: scrambled,\r\n      clue: \"Clue: \" + clue,\r\n    });\r\n    if (this.state.gameMode === \"Hard\") {\r\n      this.timerID = setInterval(this.timer, 100);\r\n    } else {\r\n      clearInterval(this.timerID);\r\n    }\r\n  }\r\n\r\n  checkWord() {\r\n    let userInput = this.userInput.value.toLowerCase();\r\n    if (this.state.word === userInput) {\r\n      this.userInput.value = \"\";\r\n      this.misses = 0;\r\n      this.state.wordCategory.splice(this.randomNumber, 1);\r\n      if (this.state.subLevel % 25 === 0) {\r\n        this.levelUp = true;\r\n        this.level += 1;\r\n      } else {\r\n        this.levelUp = false;\r\n      }\r\n      this.setState((prevState) => {\r\n        return {\r\n          score: prevState.score + 1,\r\n          wrongCount: 0,\r\n          mainLevel:\r\n            this.levelUp === true\r\n              ? prevState.mainLevel + 1\r\n              : prevState.mainLevel,\r\n          wordCategory:\r\n            this.levelUp === true\r\n              ? Constants.getWords(this.level)\r\n              : prevState.wordCategory,\r\n          subLevel: this.levelUp === true ? 1 : prevState.subLevel + 1,\r\n          seconds: 1500,\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        if (this.state.score === Constants.MaxScore) {\r\n          this.didWin = true;\r\n          this.stopGame();\r\n        } else {\r\n          this.fetchWord();\r\n        }\r\n      }, 100);\r\n    } else {\r\n      this.setState((prevState) => {\r\n        return {\r\n          score: prevState.score,\r\n          wrongCount:\r\n            prevState.wrongCount === Constants.WrongCount\r\n              ? prevState.wrongCount\r\n              : prevState.wrongCount + 1,\r\n        };\r\n      });\r\n      setTimeout(() => {\r\n        if (this.state.wrongCount === Constants.WrongCount) {\r\n          this.didWin = false;\r\n          this.stopGame();\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  stopGame() {\r\n    clearInterval(this.timerID);\r\n    this.setState((prevState) => {\r\n      return {\r\n        gameState: \"end\",\r\n        score: prevState.score,\r\n        mainLevel: 0,\r\n        subLevel: 0,\r\n        wrongCount: 0,\r\n        seconds: prevState.seconds,\r\n      };\r\n    });\r\n  }\r\n\r\n  timer() {\r\n    if (this.state.gameMode === \"Hard\") {\r\n      if (this.state.gameState === \"running\") {\r\n        this.decrementer = 1;\r\n      }\r\n\r\n      this.setState((prevState) => {\r\n        return {\r\n          seconds:\r\n            prevState.seconds === 0 ? 0 : prevState.seconds - this.decrementer,\r\n        };\r\n      });\r\n\r\n      if (this.state.seconds === 0) {\r\n        this.stopGame();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"description\">\r\n          <p>\r\n            This is a fun game that tests your knowledge in deciphering the\r\n            correct word from its scrambled form. A collection of 250 words\r\n            spread over 10 levels awaits you. Choose your level - easy, if your\r\n            are just starting out and don't want a timer to distract you{\" \"}\r\n            <span style={{ fontWeight: \"bold\" }}>OR</span> hard, if you want to\r\n            be adventurous and compete within the limits of a fixed timer. Start\r\n            this word quest and Unscramble!\r\n          </p>\r\n        </div>\r\n\r\n        <div\r\n          style={\r\n            (this.state.gameState === \"running\" ||\r\n              this.state.gameState !== \"\") &&\r\n            this.state.gameState !== \"end\"\r\n              ? { display: \"block\", maxWidth: \"900px\", margin: \"40px auto\" }\r\n              : this.state.gameState === \"end\"\r\n              ? { display: \"block\", opacity: 0.3 }\r\n              : { display: \"none\" }\r\n          }\r\n        >\r\n          <div id=\"level-header-container\">\r\n            <h3\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: \"#644566\",\r\n                background:\r\n                  \"linear-gradient(to bottom, #dbeceb 0, #dbeceb 60%, #fedc2a 60%, #fedc2a 80%, #dbeceb 60%, #dbeceb 100%)\",\r\n                margin: \"0 5px\",\r\n              }}\r\n            >\r\n              Select a level.\r\n            </h3>\r\n            <span role=\"img\" aria-label=\"slateboard-emoji\">\r\n              📋\r\n            </span>\r\n          </div>\r\n          <div id=\"level-container\">\r\n            <div\r\n              id=\"easy\"\r\n              className=\"level\"\r\n              style={\r\n                this.state.gameMode !== \"\" && this.state.gameMode === \"Easy\"\r\n                  ? { background: \"#af5790\" }\r\n                  : null\r\n              }\r\n              onClick={(e) => {\r\n                this.selectMode(e);\r\n              }}\r\n            >\r\n              <label>Easy</label>\r\n            </div>\r\n            <div\r\n              id=\"hard\"\r\n              className=\"level\"\r\n              style={\r\n                this.state.gameMode !== \"\" && this.state.gameMode === \"Hard\"\r\n                  ? { background: \"#af5790\" }\r\n                  : null\r\n              }\r\n              onClick={(e) => {\r\n                this.selectMode(e);\r\n              }}\r\n            >\r\n              <label>Hard</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"game-control-container\">\r\n            <span role=\"img\" aria-label=\"pen-emoji\">\r\n              ✒️ Level:\r\n              {` ${this.state.mainLevel} - ${this.state.subLevel}`}\r\n            </span>\r\n            <span role=\"img\" aria-label=\"dartboard-emoji\">\r\n              🎯 Score:{` ${this.state.score}`}\r\n            </span>\r\n            <span role=\"img\" aria-label=\"cross-emoji\">\r\n              ❌ Wrong:{` ${this.state.wrongCount}/5`}\r\n            </span>\r\n            <span role=\"img\" aria-label=\"sandclock-emoji\">\r\n              ⌛️ Seconds:{` ${this.state.seconds}`}\r\n            </span>\r\n          </div>\r\n          <div id=\"scrambled-word-container\">\r\n            <p id=\"scrambled-word\">{this.state.scrambledWord}</p>\r\n            <p style={{ color: \"#90490a\" }}>{`${this.state.clue}`}</p>\r\n          </div>\r\n          <div id=\"input-container\" className=\"input-field\">\r\n            <div className=\"floating-label\">\r\n              <input\r\n                id=\"input-data\"\r\n                className=\"floating-input\"\r\n                type=\"text\"\r\n                placeholder=\" \"\r\n                ref={(ref) => (this.userInput = ref)}\r\n              />\r\n              <span className=\"highlight\"></span>\r\n              <label htmlFor=\"input-data\">Enter answers here...</label>\r\n            </div>\r\n            <button id=\"answer\" className=\"btn\" onClick={this.checkWord}>\r\n              <span>Submit</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={\r\n            this.state.gameState === \"end\" &&\r\n            this.state.gameState !== \"\" &&\r\n            this.state.gameState !== \"running\"\r\n              ? { display: \"block\" }\r\n              : { display: \"none\" }\r\n          }\r\n        >\r\n          <GameEnd\r\n            didWin={this.didWin}\r\n            gameMode={this.state.gameMode}\r\n            timeLeft={this.state.seconds}\r\n            startGame={this.startGame}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}