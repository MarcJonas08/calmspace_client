{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = () => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n  let loginUser = async e => {\n    const response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': null,\n        'password': null\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      //set token here\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n  let contextData = {\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"zY+G5N+8H7wFCqhkyy+nfU1QpSs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_s","authTokens","setAuthTokens","user","setUser","loginUser","e","response","fetch","method","headers","body","JSON","stringify","data","json","status","alert","contextData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = () => {\r\n\r\n    let [authTokens, setAuthTokens] = useState(null);\r\n    let [user, setUser] = useState(null);\r\n\r\n    let loginUser = async (e) => {\r\n        const response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({'username': null, 'password':null}),\r\n            })\r\n\r\n            const data = await response.json();\r\n            \r\n            if(response.status === 200){\r\n                //set token here\r\n            } else {\r\n                alert(\"Something went wrong!\")\r\n            }\r\n    }\r\n\r\n    let contextData = {\r\n        loginUser:loginUser\r\n        \r\n    };\r\n\r\n\r\n    return(\r\n        <AuthContext.Provider >\r\n            \r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,eAAeK,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAI,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpC,IAAIW,SAAS,GAAG,MAAOC,CAAC,IAAK;IACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,UAAU,EAAE,IAAI;QAAE,UAAU,EAAC;MAAI,CAAC;IAC5D,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAGR,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAC;MACvB;IAAA,CACH,MAAM;MACHC,KAAK,CAAC,uBAAuB,CAAC;IAClC;EACR,CAAC;EAED,IAAIC,WAAW,GAAG;IACdb,SAAS,EAACA;EAEd,CAAC;EAGD,oBACIR,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAE/B,CAAC;AAAAvB,EAAA,CAlCYD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}