{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const History = useHistory();\n  const [authTokens, setAuthTokens] = useState(null);\n  const [user, setUser] = useState(null);\n  const [redirectToAssessment, setRedirectToAssessment] = useState(false);\n  const loginUser = async event => {\n    event.preventDefault();\n    const response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': event.target.username.value,\n        'password': event.target.password.value\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/assessment');\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"aBZ4IQBvoXEsb6I6/giRdK7OkFw=\", false, function () {\n  return [useHistory];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","useHistory","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","History","authTokens","setAuthTokens","user","setUser","redirectToAssessment","setRedirectToAssessment","loginUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","target","username","value","password","data","json","status","access","localStorage","setItem","navigate","alert","contextData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const History = useHistory();\r\n\r\n    const [authTokens, setAuthTokens] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n    const [redirectToAssessment, setRedirectToAssessment] = useState(false);\r\n\r\n    const loginUser = async (event) => {\r\n        event.preventDefault();\r\n\r\n            const response = await fetch('http://127.0.0.1:8000/api/token/', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({'username': event.target.username.value, 'password': event.target.password.value}),\r\n            })\r\n\r\n            const data = await response.json();\r\n            \r\n            if(response.status === 200){\r\n                setAuthTokens(data)\r\n                setUser(jwtDecode(data.access))\r\n                localStorage.setItem('authTokens', JSON.stringify(data))\r\n\r\n                navigate('/assessment');\r\n\r\n            } else {\r\n                alert(\"Something went wrong!\")\r\n            }\r\n\r\n            \r\n    }\r\n\r\n    let contextData = {\r\n        user:user,\r\n        loginUser:loginUser\r\n    };\r\n\r\n\r\n    return(\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,eAAeO,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,OAAO,GAAGP,UAAU,CAAC,CAAC;EAE5B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEvE,MAAMiB,SAAS,GAAG,MAAOC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,UAAU,EAAER,KAAK,CAACS,MAAM,CAACC,QAAQ,CAACC,KAAK;QAAE,UAAU,EAAEX,KAAK,CAACS,MAAM,CAACG,QAAQ,CAACD;MAAK,CAAC;IAC3G,CAAC,CAAC;IAEF,MAAME,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAElC,IAAGZ,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAC;MACvBrB,aAAa,CAACmB,IAAI,CAAC;MACnBjB,OAAO,CAACZ,SAAS,CAAC6B,IAAI,CAACG,MAAM,CAAC,CAAC;MAC/BC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEX,IAAI,CAACC,SAAS,CAACK,IAAI,CAAC,CAAC;MAExDM,QAAQ,CAAC,aAAa,CAAC;IAE3B,CAAC,MAAM;MACHC,KAAK,CAAC,uBAAuB,CAAC;IAClC;EAGR,CAAC;EAED,IAAIC,WAAW,GAAG;IACd1B,IAAI,EAACA,IAAI;IACTI,SAAS,EAACA;EACd,CAAC;EAGD,oBACIZ,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACX,KAAK,EAAEU,WAAY;IAAA/B,QAAA,EACpCA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAnC,EAAA,CA7CYF,YAAY;EAAA,QACLJ,UAAU;AAAA;AAAA0C,EAAA,GADjBtC,YAAY;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}