{"ast":null,"code":"import'../css/nav.css';import React,{useState,useRef,useEffect,useContext}from'react';import Nav from'./nav';import AuthContext from'../context/AuthContext';import'../css/profile.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Profile(){useEffect(()=>{document.body.style.overflow='auto';},[]);return/*#__PURE__*/_jsxs(\"body\",{children:[/*#__PURE__*/_jsx(Nav,{color:\"white\",page:\"profile\",rIcon:\"white\"}),/*#__PURE__*/_jsx(Nav_child,{})]});}async function updateProfileInfo(user,authTokens,profileInfo){try{const response=await fetch('http://89.116.21.45:8000/api/update-profile/',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(authTokens.access)},body:JSON.stringify({user:{id:user.id// Add any other user details needed for authentication\n},profileInfo:{// Include the profileInfo data to update in the Django database\n...profileInfo}})});if(response.ok){const data=await response.json();// Display a success message to the user\nalert(data.message);}else{// Handle the case where the server responds with an error\nconst errorData=await response.json();alert(\"Error updating profile: \".concat(errorData.message));}}catch(error){// Handle other errors, e.g., display an error message to the user\nconsole.error('Error updating profile:',error);}}function Nav_child(){let{user,authTokens}=useContext(AuthContext);const[userData,setUserData]=useState(null);useEffect(()=>{fetch('http://89.116.21.45:8000/api/users',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-Type':'application/json'}}).then(res=>res.json()).then(data=>{const filteredData=data.find(customUser=>customUser.id===user.user_id);setUserData(filteredData);});},[]);const[isEditable,setIsEditable]=useState(false);const handleEdit=()=>{// Set isEditable to true when the Edit button is clicked\nsetIsEditable(true);};const[formFields,setFormFields]=useState({firstname:'',lastname:'',username:'',contact:'',email:''});useEffect(()=>{if(userData){setFormFields({firstname:userData.first_name,lastname:userData.last_name,username:userData.username,contact:userData.phone_number,email:userData.email});}},[userData]);const handleInputChange=e=>{const{name,value}=e.target;setFormFields(prevFields=>({...prevFields,[name]:value}));};const handleSaveProfile=async()=>{// Create a separate object for profile information excluding passwords\nconst profileInfo={firstname:formFields.firstname.trim(),lastname:formFields.lastname.trim(),username:formFields.username.trim(),contact:formFields.contact.trim(),email:formFields.email.trim()};// Call the updateProfileInfo function directly for profileInfo\nawait updateProfileInfo(user,authTokens,profileInfo);// Optionally, you can reset the formFields\nsetFormFields({if(userData){setFormFields({firstname:userData.first_name,lastname:userData.last_name,username:userData.username,contact:userData.phone_number,email:userData.email});}});// Set isEditable back to false after saving changes\nsetIsEditable(false);};const[passwordFields,setPasswordFields]=useState({oldPassword:'',newPassword:'',confirmPassword:'',updatedPassword:''});const[passwordMismatch,setPasswordMismatch]=useState(false);const handlePasswordChange=e=>{const{name,value}=e.target;setPasswordFields(prevFields=>({...prevFields,[name]:value}));// Reset the passwordMismatch state when either password field is changed\nsetPasswordMismatch(false);};useEffect(()=>{// Check if newPassword and confirmPassword match\nif(passwordFields.newPassword!==passwordFields.confirmPassword){// If passwords don't match, set passwordMismatch to true\nsetPasswordMismatch(true);}else{// If passwords match, update the updatedPassword field\nsetPasswordFields(prevFields=>({...prevFields,updatedPassword:prevFields.newPassword}));}},[passwordFields.confirmPassword]);const handleSaveChanges=async()=>{// Check if newPassword and confirmPassword match\nif(passwordFields.newPassword!==passwordFields.confirmPassword){// If passwords don't match, show an alert\nalert(\"Passwords do not match! Please fix before saving.\");return;// Exit early if passwords don't match\n}// Check if the updated password meets the requirements\nconst updatedPassword=passwordFields.newPassword;const isPasswordValid=updatedPassword.length>=8&&/\\d/.test(updatedPassword)&&/[!@#$%^&*(),.?\":{}|<>]/.test(updatedPassword);if(!isPasswordValid){// If the password doesn't meet the requirements, show an alert\nalert(\"Password does not meet the requirements! Please fix before saving.\");return;// Exit early if password doesn't meet requirements\n}try{// Make an API request to change the password using fetch\nconst response=await fetch('http://89.116.21.45:8000/api/change-password/',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(authTokens.access)// Include your authentication token here\n},body:JSON.stringify({user:{id:user.id// Include relevant user details, adjust as needed\n// Add any other user details needed for authentication\n},old_password:passwordFields.oldPassword,new_password1:passwordFields.newPassword,// Change this field to new_password1\nnew_password2:passwordFields.confirmPassword// Change this field to new_password2\n})});if(response.ok){const data=await response.json();// Display a success message to the user\nalert(data.message);// Optionally, you can reset the password fields\nsetPasswordFields({oldPassword:'',newPassword:'',confirmPassword:'',updatedPassword:''});}else{// Handle the case where the server responds with an error\nconst errorData=await response.json();alert(\"Error changing password: \".concat(errorData.message));}}catch(error){// Handle other errors, e.g., display an error message to the user\nconsole.error('Error changing password:',error);}};return/*#__PURE__*/_jsxs(\"div\",{class:\"profile\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"profile-h1\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Profile\"})}),/*#__PURE__*/_jsxs(\"div\",{class:\"main-profile\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"general-info\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"gen-info-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group row\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"firstname\",children:\"Firstname\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"firstname\",name:\"firstname\",value:formFields.firstname,onChange:handleInputChange,disabled:!isEditable})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group row\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"lastname\",children:\"Lastname\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"lastname\",name:\"lastname\",value:formFields.lastname,onChange:handleInputChange,disabled:!isEditable})]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group row\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"text\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",name:\"username\",value:formFields.username,onChange:handleInputChange,disabled:!isEditable})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group row\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"contact\",children:\"Contact number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"contact\",name:\"contact\",value:formFields.contact,onChange:handleInputChange,disabled:!isEditable})]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formFields.email,onChange:handleInputChange,disabled:!isEditable})]})]})}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-actions\",children:[isEditable?/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsEditable(false),children:\"Cancel\"})}):/*#__PURE__*/_jsx(\"button\",{onClick:handleEdit,children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveProfile,children:\"Save Profile\"})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"password-change\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"pw-chng-form\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group-pw\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"inputPassword4\",children:\"Old Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",class:\"form-control\",id:\"inputPassword4\",name:\"oldPassword\",value:passwordFields.oldPassword,onChange:handlePasswordChange})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group-pw\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"inputPassword5\",children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",class:\"form-control\",id:\"inputPassword5\",name:\"newPassword\",value:passwordFields.newPassword,onChange:handlePasswordChange})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-form-group-pw\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"inputPassword6\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",class:\"form-control\",id:\"inputPassword6\",name:\"confirmPassword\",value:passwordFields.confirmPassword,onChange:handlePasswordChange})]})]}),passwordMismatch&&/*#__PURE__*/_jsx(\"div\",{className:\"password-mismatch-popup\",children:\"Passwords do not match! Please fix before saving.\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"pw-chng-texts\",children:[/*#__PURE__*/_jsx(\"p\",{class:\"small-text-head\",children:\"Password requirements\"}),/*#__PURE__*/_jsx(\"p\",{class:\"small-text\",children:\"To create a new password, you have to meet all of the following requirements:\"}),/*#__PURE__*/_jsxs(\"ul\",{class:\"small-text\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Minimum 8 character\"}),/*#__PURE__*/_jsx(\"li\",{children:\"At least one special character\"}),/*#__PURE__*/_jsx(\"li\",{children:\"At least one number\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Can\\u2019t be the same as a previous password\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveChanges,children:\"Save Changes\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"Log out\"})]})]})]});};","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","Nav","AuthContext","jsx","_jsx","jsxs","_jsxs","Profile","document","body","style","overflow","children","color","page","rIcon","Nav_child","updateProfileInfo","user","authTokens","profileInfo","response","fetch","method","headers","concat","access","JSON","stringify","id","ok","data","json","alert","message","errorData","error","console","userData","setUserData","then","res","filteredData","find","customUser","user_id","isEditable","setIsEditable","handleEdit","formFields","setFormFields","firstname","lastname","username","contact","email","first_name","last_name","phone_number","handleInputChange","e","name","value","target","prevFields","handleSaveProfile","trim","if","passwordFields","setPasswordFields","oldPassword","newPassword","confirmPassword","updatedPassword","passwordMismatch","setPasswordMismatch","handlePasswordChange","handleSaveChanges","isPasswordValid","length","test","old_password","new_password1","new_password2","class","for","type","onChange","disabled","Fragment","onClick","className","href"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/profile.js"],"sourcesContent":["import '../css/nav.css';\r\n\r\nimport React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport Nav from './nav';\r\nimport AuthContext from '../context/AuthContext';\r\nimport '../css/profile.css';\r\n\r\n\r\nexport default function Profile() {\r\n    useEffect(() => {\r\n        document.body.style.overflow = 'auto';\r\n      }, [])\r\n\r\n    return (\r\n        <body>\r\n            <Nav color = 'white' page = 'profile' rIcon = 'white'/>\r\n            <Nav_child />\r\n        </body>\r\n    );\r\n}\r\n\r\nasync function updateProfileInfo(user, authTokens, profileInfo) {\r\n    try {\r\n        const response = await fetch('http://89.116.21.45:8000/api/update-profile/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${authTokens.access}`,\r\n            },\r\n            body: JSON.stringify({\r\n                user: {\r\n                    id: user.id,\r\n                    // Add any other user details needed for authentication\r\n                },\r\n                profileInfo: {\r\n                    // Include the profileInfo data to update in the Django database\r\n                    ...profileInfo,\r\n                },\r\n            }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            // Display a success message to the user\r\n            alert(data.message);\r\n        } else {\r\n            // Handle the case where the server responds with an error\r\n            const errorData = await response.json();\r\n            alert(`Error updating profile: ${errorData.message}`);\r\n        }\r\n    } catch (error) {\r\n        // Handle other errors, e.g., display an error message to the user\r\n        console.error('Error updating profile:', error);\r\n    }\r\n}\r\n\r\nfunction Nav_child() {\r\n\r\n    let {user, authTokens} = useContext(AuthContext);\r\n\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('http://89.116.21.45:8000/api/users',{\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${authTokens.access}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            const filteredData = data.find(customUser => customUser.id === user.user_id);\r\n            setUserData(filteredData);\r\n\r\n        });\r\n      }, []);\r\n\r\n    const [isEditable, setIsEditable] = useState(false);\r\n\r\n    const handleEdit = () => {\r\n        // Set isEditable to true when the Edit button is clicked\r\n        setIsEditable(true);\r\n    };\r\n\r\n    const [formFields, setFormFields] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        username: '',\r\n        contact: '',\r\n        email: '',\r\n      });\r\n\r\n      useEffect(() => {\r\n        if (userData) {\r\n            setFormFields({\r\n                firstname: userData.first_name,\r\n                lastname: userData.last_name,\r\n                username: userData.username,\r\n                contact: userData.phone_number,\r\n                email: userData.email,\r\n            });\r\n        }\r\n    }, [userData]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormFields((prevFields) => ({\r\n          ...prevFields,\r\n          [name]: value,\r\n        }));\r\n    };\r\n\r\n\r\n\r\n        const handleSaveProfile = async () => {\r\n        // Create a separate object for profile information excluding passwords\r\n        const profileInfo = {\r\n            firstname: formFields.firstname.trim(),\r\n            lastname: formFields.lastname.trim(),\r\n            username: formFields.username.trim(),\r\n            contact: formFields.contact.trim(),\r\n            email: formFields.email.trim(),\r\n        };\r\n\r\n           \r\n\r\n        // Call the updateProfileInfo function directly for profileInfo\r\n        await updateProfileInfo(user, authTokens, profileInfo);\r\n\r\n        // Optionally, you can reset the formFields\r\n        setFormFields({\r\n            if (userData) {\r\n                setFormFields({\r\n                    firstname: userData.first_name,\r\n                    lastname: userData.last_name,\r\n                    username: userData.username,\r\n                    contact: userData.phone_number,\r\n                    email: userData.email,\r\n                });\r\n            }\r\n        });\r\n\r\n        // Set isEditable back to false after saving changes\r\n        setIsEditable(false);\r\n    };\r\n\r\n\r\n    const [passwordFields, setPasswordFields] = useState({\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        updatedPassword: '',\r\n    });\r\n\r\n    const [passwordMismatch, setPasswordMismatch] = useState(false);\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPasswordFields((prevFields) => ({\r\n            ...prevFields,\r\n            [name]: value,\r\n        }));\r\n        // Reset the passwordMismatch state when either password field is changed\r\n        setPasswordMismatch(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Check if newPassword and confirmPassword match\r\n        if (passwordFields.newPassword !== passwordFields.confirmPassword) {\r\n            // If passwords don't match, set passwordMismatch to true\r\n            setPasswordMismatch(true);\r\n        } else {\r\n            // If passwords match, update the updatedPassword field\r\n            setPasswordFields((prevFields) => ({\r\n                ...prevFields,\r\n                updatedPassword: prevFields.newPassword,\r\n            }));\r\n        }\r\n    }, [passwordFields.confirmPassword]);\r\n\r\n    const handleSaveChanges = async () => {\r\n        // Check if newPassword and confirmPassword match\r\n        if (passwordFields.newPassword !== passwordFields.confirmPassword) {\r\n            // If passwords don't match, show an alert\r\n            alert(\"Passwords do not match! Please fix before saving.\");\r\n            return; // Exit early if passwords don't match\r\n        }\r\n    \r\n        // Check if the updated password meets the requirements\r\n        const updatedPassword = passwordFields.newPassword;\r\n        const isPasswordValid =\r\n            updatedPassword.length >= 8 &&\r\n            /\\d/.test(updatedPassword) &&\r\n            /[!@#$%^&*(),.?\":{}|<>]/.test(updatedPassword);\r\n    \r\n        if (!isPasswordValid) {\r\n            // If the password doesn't meet the requirements, show an alert\r\n            alert(\"Password does not meet the requirements! Please fix before saving.\");\r\n            return; // Exit early if password doesn't meet requirements\r\n        }\r\n    \r\n        try {\r\n            // Make an API request to change the password using fetch\r\n            const response = await fetch('http://89.116.21.45:8000/api/change-password/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${authTokens.access}`, // Include your authentication token here\r\n                },\r\n                body: JSON.stringify({\r\n                    user: {\r\n                        id: user.id,  // Include relevant user details, adjust as needed\r\n                        // Add any other user details needed for authentication\r\n                    },\r\n                    old_password: passwordFields.oldPassword,\r\n                    new_password1: passwordFields.newPassword,  // Change this field to new_password1\r\n                    new_password2: passwordFields.confirmPassword,  // Change this field to new_password2\r\n                }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                // Display a success message to the user\r\n                alert(data.message);\r\n    \r\n                // Optionally, you can reset the password fields\r\n                setPasswordFields({\r\n                    oldPassword: '',\r\n                    newPassword: '',\r\n                    confirmPassword: '',\r\n                    updatedPassword: '',\r\n                });\r\n            } else {\r\n                // Handle the case where the server responds with an error\r\n                const errorData = await response.json();\r\n                alert(`Error changing password: ${errorData.message}`);\r\n            }\r\n        } catch (error) {\r\n            // Handle other errors, e.g., display an error message to the user\r\n            console.error('Error changing password:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    return(\r\n        <div class=\"profile\">\r\n            <div class=\"profile-h1\">\r\n                <p>Profile</p>\r\n            </div>\r\n            <div class=\"main-profile\">\r\n                <div class=\"general-info\">\r\n                    <div class=\"gen-info-wrapper\">\r\n                        <div class=\"profile-form-row\">\r\n                            <div class=\"profile-form-group row\">\r\n                                <label for=\"firstname\">Firstname</label>\r\n                                <input type=\"text\" id=\"firstname\" name=\"firstname\" value={formFields.firstname} onChange={handleInputChange} disabled={!isEditable}/>\r\n                            </div>\r\n                            <div class=\"profile-form-group row\">\r\n                                <label for=\"lastname\">Lastname</label>\r\n                                <input type=\"text\" id=\"lastname\" name=\"lastname\" value={formFields.lastname} onChange={handleInputChange} disabled={!isEditable}/>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"profile-form-row\">\r\n                            <div class=\"profile-form-group row\">\r\n                                <label for=\"text\">Username</label>\r\n                                <input type=\"text\" id=\"username\" name=\"username\" value={formFields.username} onChange={handleInputChange} disabled={!isEditable}/>\r\n                            </div>\r\n                            <div class=\"profile-form-group row\">\r\n                                <label for=\"contact\">Contact number</label>\r\n                                <input type=\"tel\" id=\"contact\" name=\"contact\" value={formFields.contact} onChange={handleInputChange} disabled={!isEditable}/>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"profile-form-group\">\r\n                            <label for=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" name=\"email\" value={formFields.email} onChange={handleInputChange} disabled={!isEditable}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"profile-actions\">\r\n                    {isEditable ? (\r\n                        <React.Fragment>\r\n                            <button onClick={() => setIsEditable(false)}>Cancel</button>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                         <button onClick={handleEdit}>Edit</button>\r\n                    )}\r\n                    {/* Add a button to directly call the updateProfileInfo function for formFields */}\r\n                    <button onClick={handleSaveProfile}>Save Profile</button>\r\n                </div>\r\n                <div class=\"password-change\">\r\n                    <div class=\"pw-chng-form\">\r\n                    <div class=\"profile-form-group-pw\">\r\n                        <label for=\"inputPassword4\">Old Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        class=\"form-control\"\r\n                        id=\"inputPassword4\"\r\n                        name=\"oldPassword\"\r\n                        value={passwordFields.oldPassword}\r\n                        onChange={handlePasswordChange}\r\n                        />\r\n                    </div>\r\n                    <div class=\"profile-form-group-pw\">\r\n                        <label for=\"inputPassword5\">New Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        class=\"form-control\"\r\n                        id=\"inputPassword5\"\r\n                        name=\"newPassword\"\r\n                        value={passwordFields.newPassword}\r\n                        onChange={handlePasswordChange}\r\n                        />\r\n                    </div>\r\n                    <div class=\"profile-form-group-pw\">\r\n                        <label for=\"inputPassword6\">Confirm Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        class=\"form-control\"\r\n                        id=\"inputPassword6\"\r\n                        name=\"confirmPassword\"\r\n                        value={passwordFields.confirmPassword}\r\n                        onChange={handlePasswordChange}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                    {passwordMismatch && (\r\n                        <div className=\"password-mismatch-popup\">\r\n                            Passwords do not match! Please fix before saving.\r\n                        </div>\r\n                    )}\r\n                    <div class=\"pw-chng-texts\">\r\n                        <p class=\"small-text-head\">Password requirements</p>\r\n                        <p class=\"small-text\">To create a new password, you have to meet all of the following requirements:</p>\r\n                        <ul class=\"small-text\">\r\n                            <li>Minimum 8 character</li>\r\n                            <li>At least one special character</li>\r\n                            <li>At least one number</li>\r\n                            <li>Can’t be the same as a previous password</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>  \r\n                <div class=\"profile-actions\">\r\n                    <button onClick={handleSaveChanges}>Save Changes</button>\r\n                    <a href = \"#\">Log out</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}