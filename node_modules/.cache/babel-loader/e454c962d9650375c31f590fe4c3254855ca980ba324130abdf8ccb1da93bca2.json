{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import AuthContext from'../context/AuthContext';import'../css/client.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterForm=_ref=>{let{openRegForm,setOpenRegForm,setSchedSuccess,setSchedError}=_ref;let{authTokens,user}=useContext(AuthContext);const[branches,setBranches]=useState([]);const[selectedAppointmentType,setSelectedAppointmentType]=useState(null);const handleAppointmentTypeChange=appointmentType=>{setSelectedAppointmentType(appointmentType);};const[selectedBranch,setSelectedBranch]=useState(null);useEffect(()=>{fetch('http://89.116.21.45:8000/api/clinic/branches',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-Type':'application/json'}}).then(res=>res.json()).then(data=>{setBranches(data);// Select the first branch by default\nif(data.length>0){setSelectedBranch(data[0].id);}});},[]);const handleBranchClick=branchId=>{setSelectedBranch(branchId);setSelectedDoctor(null);};const[doctors,setDoctors]=useState([]);useEffect(()=>{if(selectedBranch){fetch('http://89.116.21.45:8000/api/clinic/doctors',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}}).then(response=>response.json()).then(data=>{// Filter the data based on the selected branch\nconst filteredData=data.filter(doctor=>doctor.branch_name===selectedBranch);setDoctors(filteredData);}).catch(error=>console.error('Error fetching doctors:',error));}},[selectedBranch]);const[appointments,setAppointments]=useState([]);useEffect(()=>{if(openRegForm){const fetchAppointments=async()=>{try{const response=await fetch('http://89.116.21.45:8000/api/clinic/appointments',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}});if(response.ok){const data=await response.json();setAppointments(data);}else{console.error('Error fetching appointments:',response.statusText);}}catch(error){console.error('Error fetching appointments:',error);}};fetchAppointments();// Set up polling with a 5-second interval\nconst pollingInterval=setInterval(()=>{fetchAppointments();},5000);// Clear the interval when the component unmounts\nreturn()=>clearInterval(pollingInterval);}},[openRegForm]);const[advanceAppointments,setAdvanceAppointments]=useState([]);useEffect(()=>{if(openRegForm){const fetchData=()=>{fetch('http://89.116.21.45:8000/api/clinic/advance-appointments',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}}).then(response=>response.json()).then(data=>{setAdvanceAppointments(data);}).catch(error=>console.error('Error fetching appointments:',error));};// Fetch data initially\nfetchData();// Set up polling with a 5-second interval\nconst intervalId=setInterval(()=>{fetchData();},5000);// Cleanup interval on component unmount\nreturn()=>clearInterval(intervalId);}},[openRegForm]);const hasExistingScheduleForToday=async()=>{try{const today=new Date().toISOString().split('T')[0];const response=await fetch('http://89.116.21.45:8000/api/clinic/clients',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}});if(response.ok){const data=await response.json();return data.some(client=>client.userID===user.user_id&&client.appointment_date===today);}else{console.error('Error fetching clients:',response.statusText);return false;}}catch(error){console.error('Error checking existing schedule:',error);return false;}};// FUNCTIONS FOR ADDING CLIENTS\nconst[formData,setFormData]=useState({first_name:'',last_name:'',age:'',gender:'Male',birthday:'',contact_number:'',emergency_contact_number:'',email:'',doctor:'',appointment_date:'',appointment_time:'',medical_history:'',status:'active',branch_id:'',userID:null,street_address:'',barangay:'',city_town:'',province:'',postal_code:'',country:''});useEffect(()=>{setFormData({...formData,branch_id:selectedBranch,userID:user.user_id});},[selectedBranch]);const[showConfirmation,setShowConfirmation]=useState(false);const handleClientFormChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,[name]:value}));};const updateAppointmentTime=async(appointmentId,timeField,currentValue)=>{try{const response=await fetch(\"http://89.116.21.45:8000/update-appointment/\".concat(appointmentId,\"/\"),{method:'PATCH',// Assuming you use a PATCH request to update the time field\nheaders:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-Type':'application/json'},body:JSON.stringify({[timeField]:!currentValue})// Send the updated time field as false\n});if(response.ok){// Successfully updated the appointment time field\n// You may want to refresh the data or handle it in a way that suits your application\nfetch('http://89.116.21.45:8000/api/clinic/appointments',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}}).then(response=>response.json()).then(data=>{setAppointments(data);}).catch(error=>console.error('Error fetching appointments:',error));}else{// Handle the error if the update request fails\nconsole.error('Failed to update appointment time field');}}catch(error){console.error('Error updating appointment time field:',error);}};const updateAdvanceAppointmentTime=async(appointmentId,timeField,currentValue)=>{try{const response=await fetch(\"http://89.116.21.45:8000/update-advance-appointment/\".concat(appointmentId,\"/\"),{method:'PATCH',// Assuming you use a PATCH request to update the time field\nheaders:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-Type':'application/json'},body:JSON.stringify({[timeField]:!currentValue})// Send the updated time field as false\n});if(response.ok){// Successfully updated the appointment time field\n// You may want to refresh the data or handle it in a way that suits your application\nfetch('http://89.116.21.45:8000/api/clinic/advance-appointments',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}}).then(response=>response.json()).then(data=>{// Filter the data based on the 'branch' field\nconst filteredData=data.filter(appointment=>appointment.branch===user.branch.id);setAdvanceAppointments(filteredData);}).catch(error=>console.error('Error fetching appointments:',error));}else{// Handle the error if the update request fails\nconsole.error('Failed to update appointment time field');}}catch(error){console.error('Error updating appointment time field:',error);}};const[selectedAppointmentDate,setSelectedAppointmentDate]=useState('appointment');// Default to 'appointment'\nconst[showCreationConfirmation,setShowCreationConfirmation]=useState(false);const timeFieldMappings={'8:00 AM':'time_8am_9am','9:00 AM':'time_9am_10am','10:00 AM':'time_10am_11am','11:00 AM':'time_11am_12pm','1:00 PM':'time_1pm_2pm','2:00 PM':'time_2pm_3pm','3:00 PM':'time_3pm_4pm','4:00 PM':'time_4pm_5pm','8:00am':'time_8am_9am','9:00am':'time_9am_10am','10:00am':'time_10am_11am','11:00am':'time_11am_12pm','1:00pm':'time_1pm_2pm','2:00pm':'time_2pm_3pm','3:00pm':'time_3pm_4pm','4:00pm':'time_4pm_5pm'};const checkTimeSlotAvailability=async(appointmentType,appointmentId,appointmentTime)=>{try{const jsonTimeFormat=timeFieldMappings[appointmentTime];if(!jsonTimeFormat){console.error('Invalid appointment time:',appointmentTime);return false;}const response=await fetch(\"http://89.116.21.45:8000/check-time-slot-availability/\".concat(appointmentId,\"/\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-Type':'application/json'},body:JSON.stringify({appointment_type:appointmentType,appointment_time:jsonTimeFormat})});if(response.ok){const data=await response.json();return data.available;}else{console.error('Failed to check time slot availability:',response.statusText);return false;}}catch(error){console.error('Error checking time slot availability:',error);return false;}};const handleClientFormSubmit=e=>{e.preventDefault();// Display confirmation dialog\nsetShowCreationConfirmation(true);};const handleConfirm=async()=>{const existingScheduleForToday=await hasExistingScheduleForToday();if(existingScheduleForToday){window.alert('Sorry! You already have a scheduled appointment for today.');}else{const isTimeSlotAvailable=await checkTimeSlotAvailability(selectedAppointmentDate,selectedAppointmentId,formData.appointment_time.trim());if(isTimeSlotAvailable){window.alert('The selected appointment time slot is not available. Please choose another time slot.');return;// Abort the posting process\n}if(selectedAppointmentDate==='appointment'){try{const response=await fetch('http://89.116.21.45:8000/api/clinic/clients/create',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(authTokens.access)},body:JSON.stringify({first_name:formData.first_name.trim(),last_name:formData.last_name.trim(),age:formData.age.trim(),gender:formData.gender.trim(),birthday:formData.birthday.trim(),contact_number:formData.contact_number.trim(),emergency_contact_number:formData.emergency_contact_number.trim(),email:formData.email.trim(),doctor:formData.doctor,appointment_date:new Date().toISOString().split('T')[0],appointment_time:formData.appointment_time.trim(),medical_history:formData.medical_history.trim(),status:formData.status.trim(),branch:formData.branch_id,userID:formData.userID,street_address:formData.street_address.trim(),barangay:formData.barangay.trim(),city_town:formData.city_town.trim(),province:formData.province.trim(),postal_code:formData.postal_code.trim(),country:formData.country.trim()})});if(response.ok){const data=await response.json();setSchedSuccess(true);// Reset the form data\nsetFormData({first_name:'',last_name:'',age:'',gender:'Male',birthday:'',contact_number:'',emergency_contact_number:'',email:'',doctor:'',appointment_date:'',appointment_time:'',medical_history:'',street_address:'',barangay:'',city_town:'',province:'',postal_code:'',country:''});updateAppointmentTime(selectedAppointmentId,selectedTimeField,selectedCurrentValue);setOpenRegForm(false);// Fetch the updated appointments if needed\n// (You can replace this with direct state manipulation if necessary)\nfetch('http://89.116.21.45:8000/api/clinic/appointments',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}}).then(response=>response.json()).then(data=>{setAppointments(data);}).catch(error=>console.error('Error fetching appointments:',error));}else{// Handle the error if the create request fails\nsetSchedError(true);console.error('Failed to create client:',response.statusText);}}catch(error){}}else if(selectedAppointmentDate==='advance-appointment'){const today=new Date();const tomorrow=new Date(today);tomorrow.setDate(today.getDate()+1);try{const response=await fetch('http://89.116.21.45:8000/api/clinic/clients/create',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(authTokens.access)},body:JSON.stringify({first_name:formData.first_name.trim(),last_name:formData.last_name.trim(),age:formData.age.trim(),gender:formData.gender.trim(),birthday:formData.birthday.trim(),contact_number:formData.contact_number.trim(),emergency_contact_number:formData.emergency_contact_number.trim(),email:formData.email.trim(),doctor:formData.doctor,appointment_date:tomorrow.toISOString().split('T')[0],appointment_time:formData.appointment_time.trim(),medical_history:formData.medical_history.trim(),status:formData.status.trim(),branch:formData.branch_id,userID:formData.userID,street_address:formData.street_address.trim(),barangay:formData.barangay.trim(),city_town:formData.city_town.trim(),province:formData.province.trim(),postal_code:formData.postal_code.trim(),country:formData.country.trim()})});if(response.ok){const data=await response.json();setSchedSuccess(true);// Reset the form data\nsetFormData({first_name:'',last_name:'',age:'',gender:'Male',birthday:'',contact_number:'',emergency_contact_number:'',email:'',doctor:'',appointment_date:'',appointment_time:'',medical_history:'',street_address:'',barangay:'',city_town:'',province:'',postal_code:'',country:''});updateAdvanceAppointmentTime(selectedAppointmentId,selectedTimeField,selectedCurrentValue);setOpenRegForm(false);// Fetch the updated appointments if needed\n// (You can replace this with direct state manipulation if necessary)\nfetch('http://89.116.21.45:8000/api/clinic/advance-appointments',{method:'GET',headers:{'Authorization':\"Bearer \".concat(authTokens.access),'Content-type':'application/json'}}).then(response=>response.json()).then(data=>{// Filter the data based on the 'branch' field\nconst filteredData=data.filter(appointment=>appointment.branch===user.branch.id);setAdvanceAppointments(filteredData);}).catch(error=>console.error('Error fetching appointments:',error));}else{// Handle the error if the create request fails\nsetSchedError(true);console.error('Failed to create client:',response.statusText);}}catch(error){}}}setShowCreationConfirmation(false);};const handleCancel=()=>{setShowCreationConfirmation(false);// Hide confirmation dialog if user cancels\n};const[selectedDoctor,setSelectedDoctor]=useState(null);const[selectedAppointments,setSelectedAppointments]=useState([]);const[selectedTimeSlot,setSelectedTimeSlot]=useState(null);const[selectedAppointmentId,setSelectedAppointmentId]=useState(null);const[selectedTimeField,setSelectedTimeField]=useState(null);const[selectedCurrentValue,setSelectedCurrentValue]=useState(null);const[selectedAdvanceAppointments,setSelectedAdvanceAppointments]=useState([]);//appointmentId, timeField, currentValue\nuseEffect(()=>{setFormData({...formData,doctor:selectedDoctor?selectedDoctor.id:'',appointment_time:selectedTimeSlot?selectedTimeSlot:''});},[selectedDoctor,selectedTimeSlot]);useEffect(()=>{// Update selectedAppointments when selectedDoctor changes\nif(selectedDoctor){const doctorAppointments=appointments.filter(appointment=>appointment.doctor===selectedDoctor.id);setSelectedAppointments(doctorAppointments);}},[selectedDoctor,doctors,appointments]);// Watch for changes in selectedDoctor\nuseEffect(()=>{// Update selectedAppointments when selectedDoctor changes\nif(selectedDoctor){const doctorAppointments=advanceAppointments.filter(appointment=>appointment.doctor===selectedDoctor.id);setSelectedAdvanceAppointments(doctorAppointments);}},[selectedDoctor,doctors,advanceAppointments]);// Watch for changes in selectedDoctor\nconst handleDoctorClick=doctor=>{setSelectedDoctor(doctor);setSelectedTimeSlot('');};const handleAppointmentTime=(timeSlot,appointmentId,timeField,currentValue)=>{setSelectedTimeSlot(timeSlot);setSelectedAppointmentId(appointmentId);setSelectedTimeField(timeField);setSelectedCurrentValue(currentValue);};const handleAppointmentToday=()=>{setSelectedAppointmentDate('appointment');setSelectedTimeSlot('');};const handleAppointmentTomorrow=()=>{setSelectedAppointmentDate('advance-appointment');setSelectedTimeSlot('');};const isPastTimeSlot=timeSlot=>{const currentTime=new Date();const timeSlotHour=parseInt(timeSlot.split(':')[0]);const timeSlotMinute=parseInt(timeSlot.split(':')[1]);const currentHour=currentTime.getHours();const currentMinute=currentTime.getMinutes();// Check if current hour is greater than time slot hour\nif(currentHour>timeSlotHour){return true;}else if(currentHour===timeSlotHour&&currentMinute>=timeSlotMinute+30){// If current hour is equal to time slot hour, \n// check if current minute is 30 minutes or more past time slot minute\nreturn true;}else{return false;}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"create-client\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"close-btn\",onClick:()=>{setOpenRegForm(false);},children:/*#__PURE__*/_jsx(\"ion-icon\",{name:\"close\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-doctor\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Step 1. Select clinic branch\"}),/*#__PURE__*/_jsx(\"div\",{className:\"select-doctor-btns\",children:branches.map(branch=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleBranchClick(branch.id),style:{backgroundColor:selectedBranch===branch.id?'#0b3d72':'#5d9add'},children:branch.branch_name},branch.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-doctor\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Step 2. Select a doctor\"}),/*#__PURE__*/_jsx(\"div\",{className:\"select-doctor-btns\",children:doctors.map(doctor=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDoctorClick(doctor),style:{backgroundColor:selectedDoctor===doctor?'#0b3d72':'#5d9add'},children:doctor.doctor_name},doctor.id))})]}),selectedDoctor&&/*#__PURE__*/_jsxs(\"div\",{className:\"select-doctor\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Step 3. Select date of appointment\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-doctor-btns\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAppointmentToday,style:{backgroundColor:selectedAppointmentDate==='appointment'?'#0b3d72':'#5d9add'},children:\"Regular Appointment\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAppointmentTomorrow,style:{backgroundColor:selectedAppointmentDate==='advance-appointment'?'#0b3d72':'#5d9add'},children:\"Advance Appointment\"})]})]}),selectedAppointmentDate==='appointment'&&selectedAppointments.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"appointment\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Step 4. Select time of appointment\"}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Today's schedule of Dr./Dra. \",selectedDoctor.doctor_name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scheds\",children:[selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('8:00 AM')||appointment.time_8am_9am,style:{backgroundColor:selectedTimeSlot==='8:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('8:00 AM',appointment.id,'time_8am_9am',appointment.time_8am_9am),children:\"8:00 AM\"})),selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('9:00 AM')||appointment.time_9am_10am,style:{backgroundColor:selectedTimeSlot==='9:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('9:00 AM',appointment.id,'time_9am_10am',appointment.time_9am_10am),children:\"9:00 AM\"})),selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('10:00 AM')||appointment.time_10am_11am,style:{backgroundColor:selectedTimeSlot==='10:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('10:00 AM',appointment.id,'time_10am_11am',appointment.time_10am_11am),children:\"10:00 AM\"})),selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('11:00 AM')||appointment.time_11am_12pm,style:{backgroundColor:selectedTimeSlot==='11:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('11:00 AM',appointment.id,'time_11am_12pm',appointment.time_11am_12pm),children:\"11:00 AM\"})),selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('13:00 PM')||appointment.time_1pm_2pm,style:{backgroundColor:selectedTimeSlot==='1:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('1:00 PM',appointment.id,'time_1pm_2pm',appointment.time_1pm_2pm),children:\"1:00 PM\"})),selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('14:00 PM')||appointment.time_2pm_3pm,style:{backgroundColor:selectedTimeSlot==='2:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('2:00 PM',appointment.id,'time_2pm_3pm',appointment.time_2pm_3pm),children:\"2:00 PM\"})),selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('15:00 PM')||appointment.time_3pm_4pm,style:{backgroundColor:selectedTimeSlot==='3:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('3:00 PM',appointment.id,'time_3pm_4pm',appointment.time_3pm_4pm),children:\"3:00 PM\"})),selectedAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:isPastTimeSlot('16:00 PM')||appointment.time_4pm_5pm,style:{backgroundColor:selectedTimeSlot==='4:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('4:00 PM',appointment.id,'time_4pm_5pm',appointment.time_4pm_5pm),children:\"4:00 PM\"}))]})]}),selectedDoctor&&selectedAppointmentDate==='advance-appointment'&&selectedAdvanceAppointments.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"appointment\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Step 4. Select time of appointment\"}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Tomorrow's schedule of Dr./Dra. \",selectedDoctor.doctor_name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"scheds\",children:[selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_8am_9am,style:{backgroundColor:selectedTimeSlot==='8:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('8:00 AM',appointment.id,'time_8am_9am',appointment.time_8am_9am),children:\"8:00 AM\"})),selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_9am_10am,style:{backgroundColor:selectedTimeSlot==='9:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('9:00 AM',appointment.id,'time_9am_10am',appointment.time_9am_10am),children:\"9:00 AM\"})),selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_10am_11am,style:{backgroundColor:selectedTimeSlot==='10:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('10:00 AM',appointment.id,'time_10am_11am',appointment.time_10am_11am),children:\"10:00 AM\"})),selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_11am_12pm,style:{backgroundColor:selectedTimeSlot==='11:00 AM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('11:00 AM',appointment.id,'time_11am_12pm',appointment.time_11am_12pm),children:\"11:00 AM\"})),selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_1pm_2pm,style:{backgroundColor:selectedTimeSlot==='1:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('1:00 PM',appointment.id,'time_1pm_2pm',appointment.time_1pm_2pm),children:\"1:00 PM\"})),selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_2pm_3pm,style:{backgroundColor:selectedTimeSlot==='2:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('2:00 PM',appointment.id,'time_2pm_3pm',appointment.time_2pm_3pm),children:\"2:00 PM\"})),selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_3pm_4pm,style:{backgroundColor:selectedTimeSlot==='3:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('3:00 PM',appointment.id,'time_3pm_4pm',appointment.time_3pm_4pm),children:\"3:00 PM\"})),selectedAdvanceAppointments.map(appointment=>/*#__PURE__*/_jsx(\"button\",{className:\"sched-btns\",disabled:appointment.time_4pm_5pm,style:{backgroundColor:selectedTimeSlot==='4:00 PM'?'#0b3d72':''},onClick:()=>handleAppointmentTime('4:00 PM',appointment.id,'time_4pm_5pm',appointment.time_4pm_5pm),children:\"4:00 PM\"}))]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleClientFormSubmit,children:[/*#__PURE__*/_jsx(\"p\",{children:\"Step 5. Fill out these informations\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"multi-inputs\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"name\",type:\"text\",name:\"first_name\",value:formData.first_name,onChange:handleClientFormChange,placeholder:\"First name\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"name\",type:\"text\",name:\"last_name\",value:formData.last_name,onChange:handleClientFormChange,placeholder:\"Last name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"multi-inputs\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"contacts\",type:\"text\",name:\"contact_number\",value:formData.contact_number,onChange:handleClientFormChange,placeholder:\"Contact number\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"contacts\",type:\"text\",name:\"emergency_contact_number\",value:formData.emergency_contact_number,onChange:handleClientFormChange,placeholder:\"Emergency contact number\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"multi-inputs\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"demographs\",children:[\"Age:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"age\",value:formData.age,onChange:handleClientFormChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"demographs\",children:[\"Gender:\",/*#__PURE__*/_jsxs(\"select\",{name:\"gender\",value:formData.gender,onChange:handleClientFormChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"Male\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Female\",children:\"Female\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"demographs\",children:[\"Birthday:\",/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"birthday\",value:formData.birthday,onChange:handleClientFormChange,required:true})]})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"one-input\",children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",value:formData.email,onChange:handleClientFormChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"one-input\",children:[\"Medical History (Optional):\",/*#__PURE__*/_jsx(\"textarea\",{name:\"medical_history\",value:formData.medical_history,onChange:handleClientFormChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"multi-inputs\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"address\",type:\"text\",name:\"street_address\",value:formData.street_address,onChange:handleClientFormChange,placeholder:\"Street address\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"address\",type:\"text\",name:\"barangay\",value:formData.barangay,onChange:handleClientFormChange,placeholder:\"Barangay\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"multi-inputs\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"address\",type:\"text\",name:\"city_town\",value:formData.city_town,onChange:handleClientFormChange,placeholder:\"City/Town\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"address\",type:\"text\",name:\"province\",value:formData.province,onChange:handleClientFormChange,placeholder:\"Province\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"multi-inputs\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"address\",type:\"number\",name:\"postal_code\",value:formData.postal_code,onChange:handleClientFormChange,placeholder:\"Postal Code\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"address\",type:\"text\",name:\"country\",value:formData.country,onChange:handleClientFormChange,placeholder:\"Country\",required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"confirmation-btn-yes\",children:\"Submit\"})})]})]}),showCreationConfirmation&&/*#__PURE__*/_jsx(\"div\",{className:\"confirmation-popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-popup-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Confirm Submission\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Are you sure you want to submit the form?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCancel,className:\"confirmation-btn-no\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConfirm,className:\"confirmation-btn-yes\",children:\"Confirm\"})]})]})})]});};export default RegisterForm;","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsx","_jsx","jsxs","_jsxs","RegisterForm","_ref","openRegForm","setOpenRegForm","setSchedSuccess","setSchedError","authTokens","user","branches","setBranches","selectedAppointmentType","setSelectedAppointmentType","handleAppointmentTypeChange","appointmentType","selectedBranch","setSelectedBranch","fetch","method","headers","concat","access","then","res","json","data","length","id","handleBranchClick","branchId","setSelectedDoctor","doctors","setDoctors","response","filteredData","filter","doctor","branch_name","catch","error","console","appointments","setAppointments","fetchAppointments","ok","statusText","pollingInterval","setInterval","clearInterval","advanceAppointments","setAdvanceAppointments","fetchData","intervalId","hasExistingScheduleForToday","today","Date","toISOString","split","some","client","userID","user_id","appointment_date","formData","setFormData","first_name","last_name","age","gender","birthday","contact_number","emergency_contact_number","email","appointment_time","medical_history","status","branch_id","street_address","barangay","city_town","province","postal_code","country","showConfirmation","setShowConfirmation","handleClientFormChange","e","name","value","target","prevData","updateAppointmentTime","appointmentId","timeField","currentValue","body","JSON","stringify","updateAdvanceAppointmentTime","appointment","branch","selectedAppointmentDate","setSelectedAppointmentDate","showCreationConfirmation","setShowCreationConfirmation","timeFieldMappings","checkTimeSlotAvailability","appointmentTime","jsonTimeFormat","appointment_type","available","handleClientFormSubmit","preventDefault","handleConfirm","existingScheduleForToday","window","alert","isTimeSlotAvailable","selectedAppointmentId","trim","selectedTimeField","selectedCurrentValue","tomorrow","setDate","getDate","handleCancel","selectedDoctor","selectedAppointments","setSelectedAppointments","selectedTimeSlot","setSelectedTimeSlot","setSelectedAppointmentId","setSelectedTimeField","setSelectedCurrentValue","selectedAdvanceAppointments","setSelectedAdvanceAppointments","doctorAppointments","handleDoctorClick","handleAppointmentTime","timeSlot","handleAppointmentToday","handleAppointmentTomorrow","isPastTimeSlot","currentTime","timeSlotHour","parseInt","timeSlotMinute","currentHour","getHours","currentMinute","getMinutes","children","className","onClick","map","style","backgroundColor","doctor_name","disabled","time_8am_9am","time_9am_10am","time_10am_11am","time_11am_12pm","time_1pm_2pm","time_2pm_3pm","time_3pm_4pm","time_4pm_5pm","onSubmit","type","onChange","placeholder","required"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/regForm.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport AuthContext from '../context/AuthContext'\r\nimport '../css/client.css';\r\n\r\nconst RegisterForm = ({ openRegForm, setOpenRegForm, setSchedSuccess, setSchedError }) => {\r\n\r\n  let {authTokens, user} = useContext(AuthContext);\r\n\r\n\r\n  const [branches, setBranches] = useState([]);\r\n\r\n\r\n  const [selectedAppointmentType, setSelectedAppointmentType] = useState(null);\r\n\r\n  const handleAppointmentTypeChange = (appointmentType) => {\r\n    setSelectedAppointmentType(appointmentType);\r\n  };\r\n\r\n  const [selectedBranch, setSelectedBranch] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('http://89.116.21.45:8000/api/clinic/branches', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${authTokens.access}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setBranches(data);\r\n        // Select the first branch by default\r\n        if (data.length > 0) {\r\n          setSelectedBranch(data[0].id);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const handleBranchClick = (branchId) => {\r\n    setSelectedBranch(branchId);\r\n    setSelectedDoctor(null)\r\n  };\r\n\r\n    const [doctors, setDoctors] = useState([]);\r\n\r\n    useEffect(() => {\r\n      if (selectedBranch) {\r\n        fetch('http://89.116.21.45:8000/api/clinic/doctors', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${authTokens.access}`,\r\n            'Content-type': 'application/json'\r\n          }\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // Filter the data based on the selected branch\r\n            const filteredData = data.filter(doctor => doctor.branch_name === selectedBranch);\r\n            setDoctors(filteredData);\r\n          })\r\n          .catch(error => console.error('Error fetching doctors:', error));\r\n      }\r\n    }, [selectedBranch]);\r\n\r\n\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n    useEffect(() => {\r\n  \r\n      if(openRegForm){\r\n        const fetchAppointments = async () => {\r\n          try {\r\n            const response = await fetch('http://89.116.21.45:8000/api/clinic/appointments', {\r\n              method: 'GET',\r\n              headers: {\r\n                'Authorization': `Bearer ${authTokens.access}`,\r\n                'Content-type': 'application/json',\r\n              }\r\n            });\r\n    \r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              setAppointments(data);\r\n            } else {\r\n              console.error('Error fetching appointments:', response.statusText);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching appointments:', error);\r\n          }\r\n        };\r\n\r\n        fetchAppointments();\r\n\r\n          // Set up polling with a 5-second interval\r\n          const pollingInterval = setInterval(() => {\r\n            fetchAppointments();\r\n          }, 5000);\r\n\r\n          // Clear the interval when the component unmounts\r\n          return () => clearInterval(pollingInterval);\r\n      }\r\n    \r\n      }, [openRegForm]);\r\n\r\n      const [advanceAppointments, setAdvanceAppointments] = useState([]);\r\n\r\n      useEffect(() => {\r\n        \r\n          if(openRegForm){\r\n            const fetchData = () => {\r\n              fetch('http://89.116.21.45:8000/api/clinic/advance-appointments', {\r\n                method: 'GET',\r\n                headers: {\r\n                  'Authorization': `Bearer ${authTokens.access}`,\r\n                  'Content-type': 'application/json'\r\n                }\r\n              })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                  setAdvanceAppointments(data);\r\n                })\r\n                .catch(error => console.error('Error fetching appointments:', error));\r\n            };\r\n        \r\n            // Fetch data initially\r\n            fetchData();\r\n        \r\n            // Set up polling with a 5-second interval\r\n            const intervalId = setInterval(() => {\r\n              fetchData();\r\n            }, 5000);\r\n  \r\n            // Cleanup interval on component unmount\r\n            return () => clearInterval(intervalId);\r\n          }\r\n\r\n    \r\n      }, [openRegForm]);\r\n    \r\n\r\n    const hasExistingScheduleForToday = async () => {\r\n        try {\r\n          const today = new Date().toISOString().split('T')[0];\r\n          const response = await fetch('http://89.116.21.45:8000/api/clinic/clients', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization': `Bearer ${authTokens.access}`,\r\n              'Content-type': 'application/json',\r\n            }\r\n          });\r\n    \r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            return data.some(\r\n              (client) =>\r\n                client.userID === user.user_id &&\r\n                client.appointment_date === today\r\n            );\r\n          } else {\r\n            console.error('Error fetching clients:', response.statusText);\r\n            return false;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error checking existing schedule:', error);\r\n          return false;\r\n        }\r\n      };\r\n\r\n  // FUNCTIONS FOR ADDING CLIENTS\r\n\r\n  const [formData, setFormData] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    age: '',\r\n    gender: 'Male',\r\n    birthday: '',\r\n    contact_number: '',\r\n    emergency_contact_number: '',\r\n    email: '',\r\n    doctor: '',\r\n    appointment_date: '',\r\n    appointment_time: '',\r\n    medical_history: '',\r\n    status: 'active',\r\n    branch_id: '', \r\n    userID: null, \r\n    street_address: '',\r\n    barangay: '',\r\n    city_town: '',\r\n    province: '',\r\n    postal_code: '',\r\n    country: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      ...formData,\r\n      branch_id: selectedBranch,\r\n      userID: user.user_id\r\n    })\r\n  }, [selectedBranch])\r\n\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  const handleClientFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  const updateAppointmentTime = async (appointmentId, timeField, currentValue) => {\r\n    try {\r\n      const response = await fetch(`http://89.116.21.45:8000/update-appointment/${appointmentId}/`, {\r\n        method: 'PATCH', // Assuming you use a PATCH request to update the time field\r\n        headers: {\r\n          'Authorization': `Bearer ${authTokens.access}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ [timeField]: !currentValue }), // Send the updated time field as false\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Successfully updated the appointment time field\r\n        // You may want to refresh the data or handle it in a way that suits your application\r\n        fetch('http://89.116.21.45:8000/api/clinic/appointments', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${authTokens.access}`,\r\n            'Content-type': 'application/json'\r\n        }\r\n\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setAppointments(data)\r\n          })\r\n          .catch(error => console.error('Error fetching appointments:', error));\r\n\r\n      } else {\r\n        // Handle the error if the update request fails\r\n        console.error('Failed to update appointment time field');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating appointment time field:', error);\r\n    }\r\n  };\r\n  const updateAdvanceAppointmentTime = async (appointmentId, timeField, currentValue) => {\r\n    try {\r\n      const response = await fetch(`http://89.116.21.45:8000/update-advance-appointment/${appointmentId}/`, {\r\n        method: 'PATCH', // Assuming you use a PATCH request to update the time field\r\n        headers: {\r\n          'Authorization': `Bearer ${authTokens.access}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ [timeField]: !currentValue }), // Send the updated time field as false\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Successfully updated the appointment time field\r\n        // You may want to refresh the data or handle it in a way that suits your application\r\n        fetch('http://89.116.21.45:8000/api/clinic/advance-appointments', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${authTokens.access}`,\r\n            'Content-type': 'application/json'\r\n        }\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // Filter the data based on the 'branch' field\r\n            const filteredData = data.filter(appointment => appointment.branch === user.branch.id);\r\n            setAdvanceAppointments(filteredData)\r\n          })\r\n          .catch(error => console.error('Error fetching appointments:', error));\r\n\r\n      } else {\r\n        // Handle the error if the update request fails\r\n        console.error('Failed to update appointment time field');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating appointment time field:', error);\r\n    }\r\n  };\r\n\r\n  const [selectedAppointmentDate, setSelectedAppointmentDate] = useState('appointment'); // Default to 'appointment'\r\n\r\n  const [showCreationConfirmation, setShowCreationConfirmation] = useState(false);\r\n\r\n  const timeFieldMappings = {\r\n    '8:00 AM': 'time_8am_9am',\r\n    '9:00 AM': 'time_9am_10am',\r\n    '10:00 AM': 'time_10am_11am',\r\n    '11:00 AM': 'time_11am_12pm',\r\n    '1:00 PM': 'time_1pm_2pm',\r\n    '2:00 PM': 'time_2pm_3pm',\r\n    '3:00 PM': 'time_3pm_4pm',\r\n    '4:00 PM': 'time_4pm_5pm',\r\n    '8:00am': 'time_8am_9am',\r\n    '9:00am': 'time_9am_10am',\r\n    '10:00am': 'time_10am_11am',\r\n    '11:00am': 'time_11am_12pm',\r\n    '1:00pm': 'time_1pm_2pm',\r\n    '2:00pm': 'time_2pm_3pm',\r\n    '3:00pm': 'time_3pm_4pm',\r\n    '4:00pm': 'time_4pm_5pm',\r\n  };\r\n\r\n  const checkTimeSlotAvailability = async (appointmentType, appointmentId, appointmentTime) => {\r\n    try {\r\n\r\n      const jsonTimeFormat = timeFieldMappings[appointmentTime];\r\n\r\n      if (!jsonTimeFormat) {\r\n        console.error('Invalid appointment time:', appointmentTime);\r\n        return false;\r\n      }\r\n\r\n      const response = await fetch(`http://89.116.21.45:8000/check-time-slot-availability/${appointmentId}/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${authTokens.access}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          appointment_type: appointmentType,\r\n          appointment_time: jsonTimeFormat\r\n        }), \r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data.available;\r\n      } else {\r\n        console.error('Failed to check time slot availability:', response.statusText);\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error checking time slot availability:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleClientFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Display confirmation dialog\r\n    setShowCreationConfirmation(true);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n\r\n      const existingScheduleForToday = await hasExistingScheduleForToday();\r\n\r\n      if (existingScheduleForToday){\r\n        window.alert('Sorry! You already have a scheduled appointment for today.')\r\n      } else{\r\n\r\n          const isTimeSlotAvailable = await checkTimeSlotAvailability(selectedAppointmentDate, selectedAppointmentId, formData.appointment_time.trim());\r\n\r\n          if (isTimeSlotAvailable) {\r\n              window.alert('The selected appointment time slot is not available. Please choose another time slot.');\r\n              return; // Abort the posting process\r\n          }\r\n\r\n\r\n\r\n          if (selectedAppointmentDate === 'appointment'){\r\n            try{\r\n              const response = await fetch('http://89.116.21.45:8000/api/clinic/clients/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${authTokens.access}`,\r\n                },\r\n                body: JSON.stringify({\r\n                  first_name: formData.first_name.trim(),\r\n                  last_name: formData.last_name.trim(),\r\n                  age: formData.age.trim(),\r\n                  gender: formData.gender.trim(),\r\n                  birthday: formData.birthday.trim(),\r\n                  contact_number: formData.contact_number.trim(),\r\n                  emergency_contact_number: formData.emergency_contact_number.trim(),\r\n                  email: formData.email.trim(),\r\n                  doctor: formData.doctor,\r\n                  appointment_date: new Date().toISOString().split('T')[0],\r\n                  appointment_time: formData.appointment_time.trim(),\r\n                  medical_history: formData.medical_history.trim(),\r\n                  status: formData.status.trim(),\r\n                  branch: formData.branch_id,\r\n                  userID: formData.userID,\r\n                  street_address: formData.street_address.trim(),\r\n                  barangay: formData.barangay.trim(),\r\n                  city_town: formData.city_town.trim(),\r\n                  province: formData.province.trim(),\r\n                  postal_code: formData.postal_code.trim(),\r\n                  country: formData.country.trim(),\r\n                }),\r\n              })\r\n      \r\n                if (response.ok) {\r\n                  const data = await response.json();\r\n      \r\n                  setSchedSuccess(true);\r\n                  // Reset the form data\r\n                  setFormData({\r\n                    first_name: '',\r\n                    last_name: '',\r\n                    age: '',\r\n                    gender: 'Male',\r\n                    birthday: '',\r\n                    contact_number: '',\r\n                    emergency_contact_number: '',\r\n                    email: '',\r\n                    doctor: '',\r\n                    appointment_date: '',\r\n                    appointment_time: '',\r\n                    medical_history: '',\r\n                    street_address: '',\r\n                    barangay: '',\r\n                    city_town: '',\r\n                    province: '',\r\n                    postal_code: '',\r\n                    country: '',\r\n                  });\r\n                  \r\n                  updateAppointmentTime(selectedAppointmentId, selectedTimeField, selectedCurrentValue);\r\n                  setOpenRegForm(false)\r\n\r\n                  // Fetch the updated appointments if needed\r\n                  // (You can replace this with direct state manipulation if necessary)\r\n                  fetch('http://89.116.21.45:8000/api/clinic/appointments', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                      'Authorization': `Bearer ${authTokens.access}`,\r\n                      'Content-type': 'application/json',\r\n                    },\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => {\r\n                    setAppointments(data);\r\n                  })\r\n                  .catch(error => console.error('Error fetching appointments:', error));\r\n                } else {\r\n                  // Handle the error if the create request fails\r\n                  setSchedError(true)\r\n                  console.error('Failed to create client:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n              \r\n            }\r\n          } else if (selectedAppointmentDate === 'advance-appointment'){\r\n            const today = new Date();\r\n            const tomorrow = new Date(today);\r\n            tomorrow.setDate(today.getDate() + 1);\r\n  \r\n            try{\r\n              const response = await fetch('http://89.116.21.45:8000/api/clinic/clients/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': `Bearer ${authTokens.access}`,\r\n                },\r\n                body: JSON.stringify({\r\n                  first_name: formData.first_name.trim(),\r\n                  last_name: formData.last_name.trim(),\r\n                  age: formData.age.trim(),\r\n                  gender: formData.gender.trim(),\r\n                  birthday: formData.birthday.trim(),\r\n                  contact_number: formData.contact_number.trim(),\r\n                  emergency_contact_number: formData.emergency_contact_number.trim(),\r\n                  email: formData.email.trim(),\r\n                  doctor: formData.doctor,\r\n                  appointment_date: tomorrow.toISOString().split('T')[0],\r\n                  appointment_time: formData.appointment_time.trim(),\r\n                  medical_history: formData.medical_history.trim(),\r\n                  status: formData.status.trim(),\r\n                  branch: formData.branch_id,\r\n                  userID: formData.userID,\r\n                  street_address: formData.street_address.trim(),\r\n                  barangay: formData.barangay.trim(),\r\n                  city_town: formData.city_town.trim(),\r\n                  province: formData.province.trim(),\r\n                  postal_code: formData.postal_code.trim(),\r\n                  country: formData.country.trim(),\r\n                }),\r\n              })\r\n      \r\n                if (response.ok) {\r\n                  const data = await response.json();\r\n      \r\n                  setSchedSuccess(true)\r\n                  // Reset the form data\r\n                  setFormData({\r\n                    first_name: '',\r\n                    last_name: '',\r\n                    age: '',\r\n                    gender: 'Male',\r\n                    birthday: '',\r\n                    contact_number: '',\r\n                    emergency_contact_number: '',\r\n                    email: '',\r\n                    doctor: '',\r\n                    appointment_date: '',\r\n                    appointment_time: '',\r\n                    medical_history: '',\r\n                    street_address: '',\r\n                    barangay: '',\r\n                    city_town: '',\r\n                    province: '',\r\n                    postal_code: '',\r\n                    country: '',\r\n                  });\r\n      \r\n                  updateAdvanceAppointmentTime(selectedAppointmentId, selectedTimeField, selectedCurrentValue);\r\n                  setOpenRegForm(false)\r\n\r\n                  // Fetch the updated appointments if needed\r\n                  // (You can replace this with direct state manipulation if necessary)\r\n                  fetch('http://89.116.21.45:8000/api/clinic/advance-appointments', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                      'Authorization': `Bearer ${authTokens.access}`,\r\n                      'Content-type': 'application/json',\r\n                    },\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(data => {\r\n                    // Filter the data based on the 'branch' field\r\n                    const filteredData = data.filter(appointment => appointment.branch === user.branch.id);\r\n                    setAdvanceAppointments(filteredData);\r\n                  })\r\n                  .catch(error => console.error('Error fetching appointments:', error));\r\n                } else {\r\n                  // Handle the error if the create request fails\r\n                  setSchedError(true)\r\n                  console.error('Failed to create client:', response.statusText);\r\n                }\r\n            } catch (error) {\r\n              \r\n            }\r\n          }\r\n      }\r\n      setShowCreationConfirmation(false)\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowCreationConfirmation(false); // Hide confirmation dialog if user cancels\r\n  };\r\n\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\r\n  const [selectedAppointmentId, setSelectedAppointmentId] = useState(null)\r\n  const [selectedTimeField, setSelectedTimeField] = useState(null)\r\n  const [selectedCurrentValue, setSelectedCurrentValue] = useState(null)\r\n\r\n  const [selectedAdvanceAppointments, setSelectedAdvanceAppointments] = useState([]);\r\n\r\n  //appointmentId, timeField, currentValue\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      ...formData,\r\n      doctor: selectedDoctor ? selectedDoctor.id : '',\r\n      appointment_time: selectedTimeSlot ? selectedTimeSlot : '',\r\n    })\r\n  }, [selectedDoctor, selectedTimeSlot])\r\n\r\n  useEffect(() => {\r\n    // Update selectedAppointments when selectedDoctor changes\r\n    if (selectedDoctor) {\r\n      const doctorAppointments = appointments.filter(\r\n        (appointment) => appointment.doctor === selectedDoctor.id\r\n      );\r\n      setSelectedAppointments(doctorAppointments);\r\n    }\r\n  }, [selectedDoctor, doctors, appointments]); // Watch for changes in selectedDoctor\r\n\r\n  useEffect(() => {\r\n    // Update selectedAppointments when selectedDoctor changes\r\n    if (selectedDoctor) {\r\n      const doctorAppointments = advanceAppointments.filter(\r\n        (appointment) => appointment.doctor === selectedDoctor.id\r\n      );\r\n      setSelectedAdvanceAppointments(doctorAppointments);\r\n    }\r\n  }, [selectedDoctor, doctors, advanceAppointments]); // Watch for changes in selectedDoctor\r\n\r\n  const handleDoctorClick = (doctor) => {\r\n    setSelectedDoctor(doctor);\r\n    setSelectedTimeSlot('');\r\n  };\r\n\r\n  const handleAppointmentTime = (timeSlot, appointmentId, timeField, currentValue) => {\r\n    setSelectedTimeSlot(timeSlot);\r\n    setSelectedAppointmentId(appointmentId);\r\n    setSelectedTimeField(timeField);\r\n    setSelectedCurrentValue(currentValue);\r\n  }\r\n\r\n  const handleAppointmentToday = () => {\r\n    setSelectedAppointmentDate('appointment')\r\n    setSelectedTimeSlot('');\r\n  }\r\n\r\n  const handleAppointmentTomorrow = () => {\r\n    setSelectedAppointmentDate('advance-appointment')\r\n    setSelectedTimeSlot('');\r\n  }\r\n\r\n  const isPastTimeSlot = (timeSlot) => {\r\n    const currentTime = new Date();\r\n    const timeSlotHour = parseInt(timeSlot.split(':')[0]);\r\n    const timeSlotMinute = parseInt(timeSlot.split(':')[1]);\r\n    const currentHour = currentTime.getHours();\r\n    const currentMinute = currentTime.getMinutes();\r\n    \r\n    // Check if current hour is greater than time slot hour\r\n    if (currentHour > timeSlotHour) {\r\n        return true;\r\n    } else if (currentHour === timeSlotHour && currentMinute >= timeSlotMinute + 30) {\r\n        // If current hour is equal to time slot hour, \r\n        // check if current minute is 30 minutes or more past time slot minute\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='create-client'>\r\n\r\n        <div className='close-btn' onClick={() => {setOpenRegForm(false)}}>\r\n          <ion-icon name=\"close\"></ion-icon>\r\n        </div>\r\n\r\n        <div className='select-doctor'>\r\n          <p>Step 1. Select clinic branch</p>\r\n          <div className='select-doctor-btns'>\r\n            {branches.map((branch) => (\r\n              <button \r\n                key={branch.id}\r\n                onClick={() => handleBranchClick(branch.id)}\r\n                style={{ backgroundColor: selectedBranch === branch.id ? '#0b3d72' : '#5d9add' }}\r\n              >\r\n                {branch.branch_name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className='select-doctor'>\r\n          <p>Step 2. Select a doctor</p>\r\n          <div className='select-doctor-btns'>\r\n            {doctors.map((doctor) => (\r\n            <button key={doctor.id} onClick={() => handleDoctorClick(doctor)}\r\n            style={{backgroundColor: selectedDoctor === doctor ? '#0b3d72' : '#5d9add'}}>\r\n                {doctor.doctor_name}\r\n            </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {selectedDoctor && (\r\n          <div className='select-doctor'>\r\n            <p>Step 3. Select date of appointment</p>\r\n            <div className='select-doctor-btns'>\r\n              <button\r\n                onClick={handleAppointmentToday}\r\n                style={{ backgroundColor: selectedAppointmentDate === 'appointment' ? '#0b3d72' : '#5d9add' }}\r\n              >\r\n                Regular Appointment\r\n              </button>\r\n              <button\r\n                onClick={handleAppointmentTomorrow}\r\n                style={{ backgroundColor: selectedAppointmentDate === 'advance-appointment' ? '#0b3d72' : '#5d9add' }}\r\n              >\r\n                Advance Appointment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {selectedAppointmentDate === 'appointment' && selectedAppointments.length > 0 && (\r\n                <div className='appointment'>\r\n                <p>Step 4. Select time of appointment</p>\r\n                <h3>Today's schedule of Dr./Dra. {selectedDoctor.doctor_name}</h3>\r\n                <div className='scheds'>\r\n                {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('8:00 AM') || appointment.time_8am_9am} style={{backgroundColor: selectedTimeSlot === '8:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('8:00 AM', appointment.id, 'time_8am_9am', appointment.time_8am_9am)}>8:00 AM</button>\r\n                        ))}\r\n                        {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('9:00 AM') || appointment.time_9am_10am} style={{backgroundColor: selectedTimeSlot === '9:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('9:00 AM', appointment.id, 'time_9am_10am', appointment.time_9am_10am)}>9:00 AM</button>\r\n                        ))}\r\n                        {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('10:00 AM') || appointment.time_10am_11am} style={{backgroundColor: selectedTimeSlot === '10:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('10:00 AM', appointment.id, 'time_10am_11am', appointment.time_10am_11am)}>10:00 AM</button>\r\n                        ))}\r\n                        {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('11:00 AM') || appointment.time_11am_12pm} style={{backgroundColor: selectedTimeSlot === '11:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('11:00 AM', appointment.id, 'time_11am_12pm', appointment.time_11am_12pm)}>11:00 AM</button>\r\n                        ))}\r\n                        {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('13:00 PM') || appointment.time_1pm_2pm} style={{backgroundColor: selectedTimeSlot === '1:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('1:00 PM', appointment.id, 'time_1pm_2pm', appointment.time_1pm_2pm)}>1:00 PM</button>\r\n                        ))}\r\n                        {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('14:00 PM') || appointment.time_2pm_3pm} style={{backgroundColor: selectedTimeSlot === '2:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('2:00 PM', appointment.id, 'time_2pm_3pm', appointment.time_2pm_3pm)}>2:00 PM</button>\r\n                        ))}\r\n                        {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('15:00 PM') || appointment.time_3pm_4pm} style={{backgroundColor: selectedTimeSlot === '3:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('3:00 PM', appointment.id, 'time_3pm_4pm', appointment.time_3pm_4pm)}>3:00 PM</button>\r\n                        ))}\r\n                        {selectedAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={isPastTimeSlot('16:00 PM') || appointment.time_4pm_5pm} style={{backgroundColor: selectedTimeSlot === '4:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('4:00 PM', appointment.id, 'time_4pm_5pm', appointment.time_4pm_5pm)}>4:00 PM</button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n              {selectedDoctor && selectedAppointmentDate === 'advance-appointment' && selectedAdvanceAppointments.length > 0 && (\r\n                <div className='appointment'>\r\n                <p>Step 4. Select time of appointment</p>\r\n                <h3>Tomorrow's schedule of Dr./Dra. {selectedDoctor.doctor_name}</h3>\r\n                <div className='scheds'>\r\n                    {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_8am_9am} style={{backgroundColor: selectedTimeSlot === '8:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('8:00 AM', appointment.id, 'time_8am_9am', appointment.time_8am_9am)}>8:00 AM</button>\r\n                        ))}\r\n                        {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_9am_10am} style={{backgroundColor: selectedTimeSlot === '9:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('9:00 AM', appointment.id, 'time_9am_10am', appointment.time_9am_10am)}>9:00 AM</button>\r\n                        ))}\r\n                        {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_10am_11am} style={{backgroundColor: selectedTimeSlot === '10:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('10:00 AM', appointment.id, 'time_10am_11am', appointment.time_10am_11am)}>10:00 AM</button>\r\n                        ))}\r\n                        {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_11am_12pm} style={{backgroundColor: selectedTimeSlot === '11:00 AM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('11:00 AM', appointment.id, 'time_11am_12pm', appointment.time_11am_12pm)}>11:00 AM</button>\r\n                        ))}\r\n                        {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_1pm_2pm} style={{backgroundColor: selectedTimeSlot === '1:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('1:00 PM', appointment.id, 'time_1pm_2pm', appointment.time_1pm_2pm)}>1:00 PM</button>\r\n                        ))}\r\n                        {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_2pm_3pm} style={{backgroundColor: selectedTimeSlot === '2:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('2:00 PM', appointment.id, 'time_2pm_3pm', appointment.time_2pm_3pm)}>2:00 PM</button>\r\n                        ))}\r\n                        {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_3pm_4pm} style={{backgroundColor: selectedTimeSlot === '3:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('3:00 PM', appointment.id, 'time_3pm_4pm', appointment.time_3pm_4pm)}>3:00 PM</button>\r\n                        ))}\r\n                        {selectedAdvanceAppointments.map((appointment) => (\r\n                        <button className='sched-btns' disabled={appointment.time_4pm_5pm} style={{backgroundColor: selectedTimeSlot === '4:00 PM' ? '#0b3d72' : ''}} onClick={() => handleAppointmentTime('4:00 PM', appointment.id, 'time_4pm_5pm', appointment.time_4pm_5pm)}>4:00 PM</button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n          <form onSubmit={handleClientFormSubmit}>\r\n            <p>Step 5. Fill out these informations</p>\r\n            <div className='multi-inputs'>\r\n\r\n                <input\r\n                  className='name'\r\n                  type=\"text\"\r\n                  name=\"first_name\"\r\n                  value={formData.first_name}\r\n                  onChange={handleClientFormChange}\r\n                  placeholder='First name'\r\n                  required\r\n                />\r\n\r\n                <input\r\n                  className='name'\r\n                  type=\"text\"\r\n                  name=\"last_name\"\r\n                  value={formData.last_name}\r\n                  onChange={handleClientFormChange}\r\n                  placeholder='Last name'\r\n                  required\r\n                />\r\n\r\n            </div>\r\n\r\n            <div className='multi-inputs'>\r\n\r\n                <input\r\n                  className='contacts'\r\n                  type=\"text\"\r\n                  name=\"contact_number\"\r\n                  value={formData.contact_number}\r\n                  onChange={handleClientFormChange}\r\n                  placeholder='Contact number'\r\n                  required\r\n                />\r\n\r\n                <input\r\n                  className='contacts'\r\n                  type=\"text\"\r\n                  name=\"emergency_contact_number\"\r\n                  value={formData.emergency_contact_number}\r\n                  onChange={handleClientFormChange}\r\n                  placeholder='Emergency contact number'\r\n                  required\r\n                />\r\n\r\n            </div>\r\n\r\n            <div className='multi-inputs'>\r\n              <label className='demographs'>\r\n                Age:\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"age\"\r\n                  value={formData.age}\r\n                  onChange={handleClientFormChange}\r\n                  required\r\n                />\r\n              </label>\r\n\r\n              <label className='demographs'>\r\n                Gender:\r\n                <select\r\n                  name=\"gender\"\r\n                  value={formData.gender}\r\n                  onChange={handleClientFormChange}\r\n                  required\r\n                >\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n              </label>\r\n\r\n              <label className='demographs'>\r\n                Birthday:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"birthday\"\r\n                  value={formData.birthday}\r\n                  onChange={handleClientFormChange}\r\n                  required\r\n                />\r\n              </label>\r\n            </div>\r\n            \r\n            <label className='one-input'>\r\n              Email:\r\n              <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleClientFormChange}\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <label className='one-input'>\r\n              Medical History (Optional):\r\n              <textarea\r\n                name=\"medical_history\"\r\n                value={formData.medical_history}\r\n                onChange={handleClientFormChange}\r\n              />\r\n            </label>\r\n\r\n            <div className='multi-inputs'>\r\n                  <input\r\n                    className='address'\r\n                    type=\"text\"\r\n                    name=\"street_address\"\r\n                    value={formData.street_address}\r\n                    onChange={handleClientFormChange}\r\n                    placeholder='Street address'\r\n                    required\r\n                  />\r\n\r\n\r\n                  <input\r\n                    className='address'\r\n                    type=\"text\"\r\n                    name=\"barangay\"\r\n                    value={formData.barangay}\r\n                    onChange={handleClientFormChange}\r\n                    placeholder='Barangay'\r\n                    required\r\n                  />\r\n            </div>\r\n\r\n            <div className='multi-inputs'>\r\n\r\n                  <input\r\n                    className='address'\r\n                    type=\"text\"\r\n                    name=\"city_town\"\r\n                    value={formData.city_town}\r\n                    onChange={handleClientFormChange}\r\n                    placeholder='City/Town'\r\n                    required\r\n                  />\r\n\r\n                  <input\r\n                    className='address'\r\n                    type=\"text\"\r\n                    name=\"province\"\r\n                    value={formData.province}\r\n                    onChange={handleClientFormChange}\r\n                    placeholder='Province'\r\n                    required\r\n                  />\r\n            </div>\r\n\r\n            <div className='multi-inputs'>\r\n                  <input\r\n                    className='address'\r\n                    type=\"number\"\r\n                    name=\"postal_code\"\r\n                    value={formData.postal_code}\r\n                    onChange={handleClientFormChange}\r\n                    placeholder='Postal Code'\r\n                    required\r\n                  />\r\n\r\n\r\n                  <input\r\n                    className='address'\r\n                    type=\"text\"\r\n                    name=\"country\"\r\n                    value={formData.country}\r\n                    onChange={handleClientFormChange}\r\n                    placeholder='Country'\r\n                    required\r\n                  />\r\n            </div>\r\n\r\n        {/* Add your branch_id and userID input fields here */}\r\n\r\n        <div className='form-actions'>\r\n            <button type=\"submit\" className='confirmation-btn-yes'>Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {showCreationConfirmation && (\r\n        <div className=\"confirmation-popup\">\r\n          <div className=\"confirmation-popup-content\">\r\n            <h2>Confirm Submission</h2>\r\n            <p>Are you sure you want to submit the form?</p>\r\n            <div className=\"confirmation-buttons\">\r\n              <button onClick={handleCancel} className='confirmation-btn-no'>Cancel</button>\r\n              <button onClick={handleConfirm} className='confirmation-btn-yes'>Confirm</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}