{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diazm\\\\Desktop\\\\calmspace - react\\\\calmspace\\\\src\\\\components\\\\components\\\\Tetris.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport ReactHowler from 'react-howler';\nimport bgMusic from '../sounds/tetris.mp3';\nimport { VolumeUp, VolumeOff } from '@material-ui/icons';\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetris, StyledTetrisWrapper } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tetris = () => {\n  _s();\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [volume, setVolume] = useState(null);\n  const [paused, setPaused] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) updatePlayerPos({\n      x: dir,\n      y: 0\n    });\n  };\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000 / (level + 1) + 200);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n    setVolume(true);\n    setPaused(false);\n  };\n  const drop = () => {\n    // increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1);\n      // increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      updatePlayerPos({\n        x: 0,\n        y: 1,\n        collided: false\n      });\n    } else {\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({\n        x: 0,\n        y: 0,\n        collided: true\n      });\n    }\n  };\n  const keyUp = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n  const pauseGame = () => {\n    if (!paused) {\n      setDropTime(null);\n      setVolume(false);\n      setPaused(true);\n    } else if (paused) {\n      setDropTime(1000 / (level + 1) + 200);\n      setVolume(true);\n      setPaused(false);\n    }\n  };\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      } else if (keyCode === 32) {\n        pauseGame();\n      }\n    }\n  };\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage,\n        paused: paused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(ReactHowler, {\n          src: bgMusic,\n          playing: volume,\n          loop: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), gameOver && /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: `Score: ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Rows: ${rows}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Level: ${level}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: volume ? /*#__PURE__*/_jsxDEV(VolumeUp, {\n              onClick: () => {\n                setVolume(!volume);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(VolumeOff, {\n              onClick: () => {\n                setVolume(!volume);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 100\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          callback: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(Tetris, \"GbxbN5Lp+XxDfcTBd9sJ3/tV2lc=\", false, function () {\n  return [usePlayer, useStage, useGameStatus, useInterval];\n});\n_c = Tetris;\nexport default Tetris;\nvar _c;\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"names":["React","useState","ReactHowler","bgMusic","VolumeUp","VolumeOff","createStage","checkCollision","StyledTetris","StyledTetrisWrapper","useInterval","usePlayer","useStage","useGameStatus","Stage","Display","StartButton","jsxDEV","_jsxDEV","Tetris","_s","dropTime","setDropTime","gameOver","setGameOver","volume","setVolume","paused","setPaused","player","updatePlayerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setLevel","movePlayer","dir","x","y","startGame","drop","prev","collided","pos","console","log","keyUp","keyCode","dropPlayer","pauseGame","move","role","tabIndex","onKeyDown","e","onKeyUp","children","fileName","_jsxFileName","lineNumber","columnNumber","src","playing","loop","text","onClick","callback","_c","$RefreshReg$"],"sources":["C:/Users/diazm/Desktop/calmspace - react/calmspace/src/components/components/Tetris.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport ReactHowler from 'react-howler';\n\nimport bgMusic from '../sounds/tetris.mp3';\nimport { VolumeUp, VolumeOff} from '@material-ui/icons';\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetris, StyledTetrisWrapper } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n    const [volume, setVolume] = useState(null);\n    const [paused, setPaused] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, {x: dir, y: 0}))        \n            updatePlayerPos({x: dir, y: 0});\n    }\n\n    const startGame = () => {\n        setStage(createStage());\n        setDropTime(1000 / (level + 1) + 200);\n        resetPlayer();\n        setGameOver(false);\n        setScore(0);\n        setRows(0);\n        setLevel(0);\n        setVolume(true);\n        setPaused(false);\n    }\n\n    const drop = () => {\n        // increase level when player has cleared 10 rows\n        if (rows > (level + 1) * 10){\n            setLevel(prev => prev + 1);\n            // increase speed\n            setDropTime(1000 / (level + 1) + 200);\n        }\n        if (!checkCollision(player, stage, {x: 0, y: 1})){\n            updatePlayerPos({ x: 0 , y: 1, collided: false });\n        }else{\n            if (player.pos.y < 1) {\n                console.log(\"GAME OVER!!!\");\n                setGameOver(true);\n                setDropTime(null)\n            }\n            updatePlayerPos({ x: 0 , y: 0, collided: true });\n        }       \n    }\n\n    const keyUp = ({ keyCode }) => {\n        if(!gameOver){\n            if(keyCode === 40) {\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n        setDropTime(null);\n        drop();\n    }\n    \n    const pauseGame = () => {\n        if(!paused){\n            setDropTime(null);\n            setVolume(false);\n            setPaused(true);\n        } else if(paused){\n            setDropTime(1000 / (level + 1) + 200);\n            setVolume(true);\n            setPaused(false);\n        }\n    }\n\n    const move = ({ keyCode }) => {\n        if (!gameOver){\n            if(keyCode === 37) {\n                movePlayer(-1);\n            }else if(keyCode === 39) {\n                movePlayer(1);\n            }else if(keyCode === 40) {\n                dropPlayer();\n            }else if(keyCode === 38) {\n                playerRotate(stage, 1);\n            }else if(keyCode === 32) {\n                pauseGame(); \n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime);\n\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={keyUp}>\n            <StyledTetris>\n                <Stage stage={stage} paused={paused}/>\n                <aside>\n                    <ReactHowler\n                        src={bgMusic}\n                        playing={volume}\n                        loop={true}\n                    />\n                    {gameOver && (\n                        <Display gameOver={gameOver} text=\"Game Over\" />\n                    )}\n                    <div>\n                        <Display text={`Score: ${score}`} />\n                        <Display text={`Rows: ${rows}`} />\n                        <Display text={`Level: ${level}`} />\n                        <Display text={volume ? <VolumeUp onClick={() =>{setVolume(!volume)} }/> : <VolumeOff onClick={() =>{setVolume(!volume)} }/> }/>    \n                    </div>\n                    <StartButton callback={startGame}/>\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}